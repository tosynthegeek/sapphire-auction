{"id":"db781fb2084c65fa0688bf94fd281990","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/**\n * @title Sapphire\n * @notice This library provides a number of convenient wrappers for\n * cryptographic operations such as the x25519 key derivation, Deoxys-II-based\n * encryption and decryption, signing key generation, message digest signing and\n * verification, gas padding and hashing.\n *\n * Most of the mentioned functions are implemented as Sapphire's precompiles and\n * are cheap to call.\n *\n * #### Calling Precompiles Manually\n *\n * You can override the wrappers and call Sapphire precompiles by dispatching\n * calls to specific well-known contract addresses, as described below. The\n * __Precompile address__ section of each function will show you the address\n * of the corresponding precompile.\n *\n * Input parameters should be packed into a contiguous memory region with each\n * chunk of data padded to 32 bytes as usual. The recommended way to construct\n * parameter byte sequences in Solidity is with `abi.encode` and `abi.decode`,\n * which will transparently handle things like putting `bytes` lengths in the\n * correct position.\n */\nlibrary Sapphire {\n    // Oasis-specific, confidential precompiles\n    address internal constant RANDOM_BYTES =\n        0x0100000000000000000000000000000000000001;\n    address internal constant DERIVE_KEY =\n        0x0100000000000000000000000000000000000002;\n    address internal constant ENCRYPT =\n        0x0100000000000000000000000000000000000003;\n    address internal constant DECRYPT =\n        0x0100000000000000000000000000000000000004;\n    address internal constant GENERATE_SIGNING_KEYPAIR =\n        0x0100000000000000000000000000000000000005;\n    address internal constant SIGN_DIGEST =\n        0x0100000000000000000000000000000000000006;\n    address internal constant VERIFY_DIGEST =\n        0x0100000000000000000000000000000000000007;\n    address internal constant CURVE25519_PUBLIC_KEY =\n        0x0100000000000000000000000000000000000008;\n    address internal constant GAS_USED =\n        0x0100000000000000000000000000000000000009;\n    address internal constant PAD_GAS =\n        0x010000000000000000000000000000000000000a;\n\n    // Oasis-specific, general precompiles\n    address internal constant SHA512_256 =\n        0x0100000000000000000000000000000000000101;\n    address internal constant SHA512 =\n        0x0100000000000000000000000000000000000102;\n    address internal constant SHA384 =\n        0x0100000000000000000000000000000000000104;\n\n    type Curve25519PublicKey is bytes32;\n    type Curve25519SecretKey is bytes32;\n\n    enum SigningAlg {\n        /// Ed25519 signature over the provided message using SHA-512/265 with a domain separator.\n        /// Can be used to sign transactions for the Oasis consensus layer and SDK paratimes.\n        Ed25519Oasis,\n        /// Ed25519 signature over the provided message.\n        Ed25519Pure,\n        /// Ed25519 signature over the provided prehashed SHA-512 digest.\n        Ed25519PrehashedSha512,\n        /// Secp256k1 signature over the provided message using SHA-512/256 with a domain separator.\n        /// Can be used to sign transactions for the Oasis consensus layer and SDK paratimes.\n        Secp256k1Oasis,\n        /// Secp256k1 over the provided Keccak256 digest.\n        /// Can be used to sign transactions for Ethereum-compatible networks.\n        Secp256k1PrehashedKeccak256,\n        /// Secp256k1 signature over the provided SHA-256 digest.\n        Secp256k1PrehashedSha256,\n        /// Sr25519 signature over the provided message.\n        Sr25519,\n        /// Secp256r1 signature over the provided SHA-256 digest.\n        Secp256r1PrehashedSha256,\n        /// Secp384r1 signature over the provided SHA-384 digest.\n        Secp384r1PrehashedSha384\n    }\n\n    /**\n     * @notice Generate `num_bytes` pseudo-random bytes, with an optional\n     * personalization string (`pers`) added into the hashing algorithm to\n     * increase domain separation when needed.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000001`\n     *\n     * #### Gas cost\n     *\n     * 10,000 minimum plus 240 per output word plus 60 per word of the\n     * personalization string.\n     *\n     * #### Implementation details\n     *\n     * The mode (e.g. simulation or \"view call\" vs transaction execution) is fed\n     * to TupleHash (among other block-dependent components) to derive the \"key\n     * id\", which is then used to derive a per-block VRF key from\n     * epoch-ephemeral entropy (using KMAC256 and cSHAKE) so a different key\n     * id will result in a unique per-block VRF key. This per-block VRF key is\n     * then used to create the per-block root RNG which is then used to derive\n     * domain-separated (using Merlin transcripts) per-transaction random RNGs\n     * which are then exposed via this precompile. The KMAC, cSHAKE and\n     * TupleHash algorithms are SHA-3 derived functions defined in [NIST\n     * Special Publication 800-185](https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-185.pdf).\n     *\n     * #### DANGER: Prior to Sapphire ParaTime 0.6.0\n     *\n     * All view queries and simulated transactions (via `eth_call`) would\n     * receive the same entropy in-between blocks if they use the same\n     * `num_bytes` and `pers` parameters. If your contract requires\n     * confidentiality you should generate a secret in the constructor to be\n     * used with view calls:\n     *\n     * ```solidity\n     * Sapphire.randomBytes(64, abi.encodePacked(msg.sender, this.perContactSecret));\n     * ```\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes memory randomPad = Sapphire.randomBytes(64, \"\");\n     * ```\n     *\n     * @param numBytes The number of bytes to return.\n     * @param pers An optional personalization string to increase domain\n     *        separation.\n     * @return The random bytes. If the number of bytes requested is too large\n     *         (over 1024), a smaller amount (1024) will be returned.\n     */\n    function randomBytes(uint256 numBytes, bytes memory pers)\n        internal\n        view\n        returns (bytes memory)\n    {\n        (bool success, bytes memory entropy) = RANDOM_BYTES.staticcall(\n            abi.encode(numBytes, pers)\n        );\n        require(success, \"randomBytes: failed\");\n        return entropy;\n    }\n\n    /**\n     * @notice Generates a Curve25519 keypair.\n     * @param pers An optional personalization string used to add domain\n     * separation.\n     * @return pk The Curve25519 public key. Useful for key exchange.\n     * @return sk The Curve25519 secret key. Pairs well with\n     * [deriveSymmetricKey](#derivesymmetrickey).\n     */\n    function generateCurve25519KeyPair(bytes memory pers)\n        internal\n        view\n        returns (Curve25519PublicKey pk, Curve25519SecretKey sk)\n    {\n        bytes memory scalar = randomBytes(32, pers);\n        // Twiddle some bits, as per RFC 7748 ยง5.\n        scalar[0] &= 0xf8; // Make it a multiple of 8 to avoid small subgroup attacks.\n        scalar[31] &= 0x7f; // Clamp to < 2^255 - 19\n        scalar[31] |= 0x40; // Clamp to >= 2^254\n        (bool success, bytes memory pkBytes) = CURVE25519_PUBLIC_KEY.staticcall(\n            scalar\n        );\n        require(success, \"gen curve25519 pk: failed\");\n        return (\n            Curve25519PublicKey.wrap(bytes32(pkBytes)),\n            Curve25519SecretKey.wrap(bytes32(scalar))\n        );\n    }\n\n    /**\n     * @notice Derive a symmetric key from a pair of keys using x25519.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000002`\n     *\n     * #### Gas cost\n     *\n     * 100,000\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes32 publicKey = ... ;\n     * bytes32 privateKey = ... ;\n     * bytes32 symmetric = Sapphire.deriveSymmetricKey(publicKey, privateKey);\n     * ```\n     *\n     * @param peerPublicKey The peer's public key.\n     * @param secretKey Your secret key.\n     * @return A derived symmetric key.\n     */\n    function deriveSymmetricKey(\n        Curve25519PublicKey peerPublicKey,\n        Curve25519SecretKey secretKey\n    ) internal view returns (bytes32) {\n        (bool success, bytes memory symmetric) = DERIVE_KEY.staticcall(\n            abi.encode(peerPublicKey, secretKey)\n        );\n        require(success, \"deriveSymmetricKey: failed\");\n        return bytes32(symmetric);\n    }\n\n    /**\n     * @notice Encrypt and authenticate the plaintext and additional data using\n     * DeoxysII.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000003`\n     *\n     * #### Gas cost\n     *\n     * 50,000 minimum plus 100 per word of input\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes32 key = ... ;\n     * bytes32 nonce = ... ;\n     * bytes memory text = \"plain text\";\n     * bytes memory ad = \"additional data\";\n     * bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n     * bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n     * ```\n     *\n     * @param key The key to use for encryption.\n     * @param nonce The nonce. Note that only the first 15 bytes of this\n     * parameter are used.\n     * @param plaintext The plaintext to encrypt and authenticate.\n     * @param additionalData The additional data to authenticate.\n     * @return The ciphertext with appended auth tag.\n     */\n    function encrypt(\n        bytes32 key,\n        bytes32 nonce,\n        bytes memory plaintext,\n        bytes memory additionalData\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory ciphertext) = ENCRYPT.staticcall(\n            abi.encode(key, nonce, plaintext, additionalData)\n        );\n        require(success, \"encrypt: failed\");\n        return ciphertext;\n    }\n\n    /**\n     * @notice Decrypt and authenticate the ciphertext and additional data using\n     * DeoxysII. Reverts if the auth tag is incorrect.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000004`\n     *\n     * #### Gas cost\n     *\n     * 50,000 minimum plus 100 per word of input\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes32 key = ... ;\n     * bytes32 nonce = ... ;\n     * bytes memory text = \"plain text\";\n     * bytes memory ad = \"additional data\";\n     * bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n     * bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n     * ```\n     *\n     * @param key The key to use for decryption.\n     * @param nonce The nonce. Note that only the first 15 bytes of this\n     * parameter are used.\n     * @param ciphertext The ciphertext with tag to decrypt and authenticate.\n     * @param additionalData The additional data to authenticate against the\n     * ciphertext.\n     * @return The original plaintext.\n     */\n    function decrypt(\n        bytes32 key,\n        bytes32 nonce,\n        bytes memory ciphertext,\n        bytes memory additionalData\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory plaintext) = DECRYPT.staticcall(\n            abi.encode(key, nonce, ciphertext, additionalData)\n        );\n        require(success, \"decrypt: failed\");\n        return plaintext;\n    }\n\n    /**\n     * @notice Generate a public/private key pair using the specified method and\n     * seed. The available methods are items in the\n     * [`Sapphire.SigningAlg`](#signingalg) enum. Note, however, that the\n     * generation method ignores subvariants, so all three Ed25519-based are\n     * equivalent, and all Secp256k1 & Secp256r1 based methods are equivalent.\n     * Sr25519 is not available and will return an error.\n     *\n     * #### Precompile address\n     * `0x0100000000000000000000000000000000000005`\n     *\n     * #### Gas Cost\n     *\n     * ##### Ed25519: 1,000 gas\n     *\n     * - `0` (`Ed25519Oasis`)\n     * - `1` (`Ed25519Pure`)\n     * - `2` (`Ed25519PrehashedSha512`)\n     *\n     * ##### Secp256k1: 1,500 gas.\n     * - `3` (`Secp256k1Oasis`)\n     * - `4` (`Secp256k1PrehashedKeccak256`)\n     * - `5` (`Secp256k1PrehashedSha256`)\n     *\n     * ##### Secp256r1: 4,000 gas\n     * - `7` (`Secp256r1PrehashedSha256`)\n     *\n     * #### Public Key Format\n     *\n     * ##### Ed25519\n     *\n     * 32 bytes\n     *\n     * ##### Secp256k1 & Secp256r1\n     *\n     * 33 bytes, compressed format (`0x02` or `0x03` prefix, then 32 byte X\n     * coordinate).\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes memory seed = hex\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\";\n     * bytes memory publicKey;\n     * bytes memory privateKey;\n     * (publicKey, privateKey) = Sapphire.generateSigningKeyPair(Sapphire.SigningAlg.Ed25519Pure, seed);\n     * ```\n     *\n     * @param alg The signing alg for which to generate a keypair.\n     * @param seed The seed to use for generating the key pair. You can use the\n     * `randomBytes` method if you don't already have a seed.\n     * @return publicKey The public half of the keypair.\n     * @return secretKey The secret half of the keypair.\n     */\n    function generateSigningKeyPair(SigningAlg alg, bytes memory seed)\n        internal\n        view\n        returns (bytes memory publicKey, bytes memory secretKey)\n    {\n        (bool success, bytes memory keypair) = GENERATE_SIGNING_KEYPAIR\n            .staticcall(abi.encode(alg, seed));\n        require(success, \"gen signing keypair: failed\");\n        return abi.decode(keypair, (bytes, bytes));\n    }\n\n    /**\n     * @notice Sign a message within the provided context using the specified\n     * algorithm, and return the signature. The `context_or_digest` and\n     * `messages` parameters change in meaning slightly depending on the method\n     * requested. For methods that take a context in addition to the message you\n     * must pass the context in the `context_or_digest` parameter and use\n     * `message` as expected. For methods that take a pre-existing hash of the\n     * message, pass that in `context_or_digest` and leave `message` empty.\n     * Specifically the `Ed25519Oasis` and `Secp256k1Oasis` variants take both a\n     * context and a message (each are variable length `bytes`), the context\n     * serves as a domain separator.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000006`\n     *\n     * #### Gas cost\n     *\n     * See below for the method-dependent base cost, plus 8 gas per 32 bytes of\n     * context and message except digest.\n     *\n     * #### Signing algorithms\n     *\n     * - `0` (`Ed25519Oasis`): 1,500 gas, variable length context and message.\n     * - `1` (`Ed25519Pure`): 1,500 gas, empty context, variable length message.\n     * - `2` (`Ed25519PrehashedSha512`): 1,500 gas, pre-existing SHA-512 hash\n     *   (64 bytes) as context, empty message.\n     * - `3` (`Secp256k1Oasis`): 3,000 gas, variable length context and message\n     * - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas, pre-existing hash\n     *   (32 bytes) as context, empty message.\n     * - `5` (`Secp256k1PrehashedSha256`): 3,000 gas, pre-existing hash (32\n     *   bytes) as context, empty message.\n     * - `7` (`Secp256r1PrehashedSha256`): 9,000 gas, pre-existing hash (32\n     *   bytes) as context, empty message.\n     *\n     * #### Example\n     *\n     * ```solidity\n     * Sapphire.SigningAlg alg = Sapphire.SigningAlg.Ed25519Pure;\n     * bytes memory pk;\n     * bytes memory sk;\n     * (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n     * bytes memory signature = Sapphire.sign(alg, sk, \"\", \"signed message\");\n     * ```\n     *\n     * @param alg The signing algorithm to use.\n     * @param secretKey The secret key to use for signing. The key must be valid\n     * for use with the requested algorithm.\n     * @param contextOrHash Domain-Separator Context, or precomputed hash bytes.\n     * @param message Message to sign, should be zero-length if precomputed hash\n     * given.\n     * @return signature The resulting signature.\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_sign\n     */\n    function sign(\n        SigningAlg alg,\n        bytes memory secretKey,\n        bytes memory contextOrHash,\n        bytes memory message\n    ) internal view returns (bytes memory signature) {\n        (bool success, bytes memory sig) = SIGN_DIGEST.staticcall(\n            abi.encode(alg, secretKey, contextOrHash, message)\n        );\n        require(success, \"sign: failed\");\n        return sig;\n    }\n\n    /**\n     * @notice Verifies that the provided digest was signed with using the\n     * secret key corresponding to the provided private key and the specified\n     * signing algorithm.\n     *\n     * The `method`, `context_or_digest` and `message` parameters have the same\n     * meaning as described above in the [sign()](#sign) function.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000007`\n     *\n     * #### Gas cost\n     *\n     * The algorithm-specific base cost below, with an additional **8 gas per\n     * 32 bytes** of `context` and `message` for the `Ed25519Oasis`,\n     * `Ed25519Pure` and `Secp256k1Oasis` algorithms.\n     *\n     * - `0` (`Ed25519Oasis`): 2,000 gas\n     * - `1` (`Ed25519Pure`): 2,000 gas\n     * - `2` (`Ed25519PrehashedSha512`): 2,000 gas\n     * - `3` (`Secp256k1Oasis`): 3,000 gas\n     * - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas\n     * - `5` (`Secp256k1PrehashedSha256`): 3,000 gas\n     * - `7` (`Secp256r1PrehashedSha256`): 7,900 gas\n     *\n     * #### Example\n     *\n     * ```solidity\n     * Sapphire.SigningAlg alg = Sapphire.SigningAlg.Secp256k1PrehashedKeccak256;\n     * bytes memory pk;\n     * bytes memory sk;\n     * bytes memory digest = abi.encodePacked(keccak256(\"signed message\"));\n     * (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n     * bytes memory signature = Sapphire.sign(alg, sk, digest, \"\");\n     * require( Sapphire.verify(alg, pk, digest, \"\", signature) );\n     * ```\n     *\n     * @param alg The signing algorithm by which the signature was generated.\n     * @param publicKey The public key against which to check the signature.\n     * @param contextOrHash Domain-Separator Context, or precomputed hash bytes\n     * @param message The hash of the message that was signed, should be\n     * zero-length if precomputed hash was given.\n     * @param signature The signature to check.\n     * @return verified Whether the signature is valid for the given parameters.\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_verify\n     */\n    function verify(\n        SigningAlg alg,\n        bytes memory publicKey,\n        bytes memory contextOrHash,\n        bytes memory message,\n        bytes memory signature\n    ) internal view returns (bool verified) {\n        (bool success, bytes memory v) = VERIFY_DIGEST.staticcall(\n            abi.encode(alg, publicKey, contextOrHash, message, signature)\n        );\n        require(success, \"verify: failed\");\n        return abi.decode(v, (bool));\n    }\n\n    /**\n     * @notice Set the current transactions gas usage to a specific amount\n     * @dev Will cause a reversion if the current usage is more than the amount.\n     * @param toAmount Gas usage will be set to this amount\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_pad_gas\n     *\n     */\n    function padGas(uint128 toAmount) internal view {\n        (bool success, ) = PAD_GAS.staticcall(abi.encode(toAmount));\n        require(success, \"verify: failed\");\n    }\n\n    /**\n     * @notice Returns the amount of gas currently used by the transaction\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_gas_used\n     */\n    function gasUsed() internal view returns (uint64) {\n        (bool success, bytes memory v) = GAS_USED.staticcall(\"\");\n        require(success, \"gasused: failed\");\n        return abi.decode(v, (uint64));\n    }\n}\n\n/**\n * @notice Hash the input data with SHA-512/256, according to\n * [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n *\n * #### Precompile address\n *\n * `0x0100000000000000000000000000000000000102`\n *\n * #### Gas cost\n *\n * 115 gas, then 13 gas per word\n *\n * #### Example\n *\n * ```solidity\n * bytes32 result = sha512_256(abi.encodePacked(\"input data\"));\n * ```\n *\n * #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n *\n * [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n * attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n * relevant if you are computing the hash of a secret message. The\n * [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n * vulnerable to length-extension attacks.\n *\n * @param input Bytes to hash.\n * @return result 32 byte digest.\n * @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n * @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512_256\n */\nfunction sha512_256(bytes memory input) view returns (bytes32 result) {\n    (bool success, bytes memory output) = Sapphire.SHA512_256.staticcall(input);\n\n    require(success, \"sha512_256\");\n\n    return bytes32(output);\n}\n\n/**\n * @notice Hash the input data with SHA-512, according to\n * [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf)\n *\n * #### Precompile address\n *\n * `0x0100000000000000000000000000000000000101`\n *\n * #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n *\n * [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n * attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n * relevant if you are computing the hash of a secret message. The\n * [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n * vulnerable to length-extension attacks.\n *\n * #### Gas Cost\n *\n * 115 gas, then 13 gas per word\n *\n * #### Example\n *\n * ```solidity\n * bytes memory result = sha512(abi.encodePacked(\"input data\"));\n * ```\n *\n * @param input Bytes to hash.\n * @return output 64 byte digest.\n * @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n * @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512\n */\nfunction sha512(bytes memory input) view returns (bytes memory output) {\n    bool success;\n\n    (success, output) = Sapphire.SHA512.staticcall(input);\n\n    require(success, \"sha512\");\n}\n\n/**\n * @notice Hash the input data with SHA-384.\n * @param input Bytes to hash.\n * @return output 48 byte digest.\n * @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n * @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha384\n */\nfunction sha384(bytes memory input) view returns (bytes memory output) {\n    bool success;\n\n    (success, output) = Sapphire.SHA384.staticcall(input);\n\n    require(success, \"sha384\");\n}\n"},"contracts/Auction.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\";\r\n\r\ncontract NewAuction {\r\n    // Auction details\r\n    address payable public seller; // Address of the seller\r\n    uint256 public startingPrice; // Starting price of the auction\r\n    uint256 public highestBid; // Highest bid amount\r\n    address public highestBidder; // Address of the highest bidder\r\n    uint256 public auctionEndTime; // Timestamp when the auction ends\r\n    bool public auctionEnded; // Flag to indicate if the auction has ended\r\n    uint256 public bidCount;\r\n\r\n    // Mapping to store bids of each address\r\n    struct Bid {\r\n        address bidder;\r\n        uint256 bid;\r\n    }\r\n\r\n    Bid[] public bids;\r\n\r\n    // Events for auction lifecycle\r\n    event BidCreated(address bidder, uint256 amount);\r\n    event AuctionEnded(address winner, uint256 winningBid);\r\n\r\n    // Constructor to initialize auction parameters\r\n    constructor(\r\n        address payable _seller, // Address of the seller\r\n        uint256 _startingPrice, // Starting price of the auction\r\n        uint256 _auctionEndTime // Duration of the auction\r\n    ) {\r\n        seller = _seller;\r\n        startingPrice = _startingPrice;\r\n        highestBid = startingPrice;\r\n        auctionEndTime = block.timestamp + _auctionEndTime; // Set the end time of the auction\r\n    }\r\n\r\n    function bid() external payable {\r\n        require(block.timestamp < auctionEndTime, \"Auction has ended\");\r\n        require(\r\n            msg.value > highestBid,\r\n            \"Bid must be higher than the current highest bid\"\r\n        );\r\n        if (highestBidder != address(0)) {\r\n            payable(highestBidder).transfer(highestBid);\r\n        }\r\n        highestBid = msg.value;\r\n        highestBidder = msg.sender;\r\n        Bid memory newBid = Bid(msg.sender, msg.value);\r\n        bids.push(newBid);\r\n        bidCount++;\r\n        emit BidCreated(msg.sender, msg.value);\r\n    }\r\n\r\n    function checkBid(uint256 index) external view returns (address, uint256) {\r\n        require(index <= bidCount, \"Wrong Index\");\r\n        Bid memory getBid = bids[index];\r\n        require(block.timestamp > auctionEndTime, \"Auction is still ongoing\");\r\n        require(\r\n            msg.sender == highestBidder || msg.sender == seller,\r\n            \"Only Highest Bidder and seller can check bids\"\r\n        );\r\n        return (getBid.bidder, getBid.bid);\r\n    }\r\n\r\n    function checkAuctionEndTime() external view returns (uint256) {\r\n        return auctionEndTime;\r\n    }\r\n\r\n    // Function to end the auction and transfer funds to the seller\r\n    function endAuction() external {\r\n        // Check if the auction has ended\r\n        require(block.timestamp >= auctionEndTime, \"Auction is still ongoing\");\r\n        auctionEnded = true; // Update auction status\r\n        // Transfer the highest bid to the seller\r\n        seller.transfer(highestBid);\r\n        // Emit AuctionEnded event\r\n        emit AuctionEnded(highestBidder, highestBid);\r\n    }\r\n\r\n    // Function to retrieve auction details\r\n    function getAuctionDetails()\r\n        external\r\n        view\r\n        returns (address, uint256, uint256, address, uint256, bool, uint256)\r\n    {\r\n        return (\r\n            seller,\r\n            startingPrice,\r\n            highestBid,\r\n            highestBidder,\r\n            auctionEndTime,\r\n            auctionEnded,\r\n            bidCount\r\n        );\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol":{"ast":{"absolutePath":"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol","exportedSymbols":{"Sapphire":[443],"sha384":[526],"sha512":[499],"sha512_256":[472]},"id":527,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Sapphire","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"64:1052:0","text":" @title Sapphire\n @notice This library provides a number of convenient wrappers for\n cryptographic operations such as the x25519 key derivation, Deoxys-II-based\n encryption and decryption, signing key generation, message digest signing and\n verification, gas padding and hashing.\n Most of the mentioned functions are implemented as Sapphire's precompiles and\n are cheap to call.\n #### Calling Precompiles Manually\n You can override the wrappers and call Sapphire precompiles by dispatching\n calls to specific well-known contract addresses, as described below. The\n __Precompile address__ section of each function will show you the address\n of the corresponding precompile.\n Input parameters should be packed into a contiguous memory region with each\n chunk of data padded to 32 bytes as usual. The recommended way to construct\n parameter byte sequences in Solidity is with `abi.encode` and `abi.decode`,\n which will transparently handle things like putting `bytes` lengths in the\n correct position."},"fullyImplemented":true,"id":443,"linearizedBaseContracts":[443],"name":"Sapphire","nameLocation":"1125:8:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"RANDOM_BYTES","nameLocation":"1214:12:0","nodeType":"VariableDeclaration","scope":443,"src":"1188:91:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"1188:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303031","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1237:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000001"},"visibility":"internal"},{"constant":true,"id":8,"mutability":"constant","name":"DERIVE_KEY","nameLocation":"1311:10:0","nodeType":"VariableDeclaration","scope":443,"src":"1285:89:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303032","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000002"},"visibility":"internal"},{"constant":true,"id":11,"mutability":"constant","name":"ENCRYPT","nameLocation":"1406:7:0","nodeType":"VariableDeclaration","scope":443,"src":"1380:86:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"1380:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303033","id":10,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1424:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000003"},"visibility":"internal"},{"constant":true,"id":14,"mutability":"constant","name":"DECRYPT","nameLocation":"1498:7:0","nodeType":"VariableDeclaration","scope":443,"src":"1472:86:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303034","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1516:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000004"},"visibility":"internal"},{"constant":true,"id":17,"mutability":"constant","name":"GENERATE_SIGNING_KEYPAIR","nameLocation":"1590:24:0","nodeType":"VariableDeclaration","scope":443,"src":"1564:103:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303035","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1625:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000005"},"visibility":"internal"},{"constant":true,"id":20,"mutability":"constant","name":"SIGN_DIGEST","nameLocation":"1699:11:0","nodeType":"VariableDeclaration","scope":443,"src":"1673:90:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1673:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303036","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000006"},"visibility":"internal"},{"constant":true,"id":23,"mutability":"constant","name":"VERIFY_DIGEST","nameLocation":"1795:13:0","nodeType":"VariableDeclaration","scope":443,"src":"1769:92:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303037","id":22,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1819:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000007"},"visibility":"internal"},{"constant":true,"id":26,"mutability":"constant","name":"CURVE25519_PUBLIC_KEY","nameLocation":"1893:21:0","nodeType":"VariableDeclaration","scope":443,"src":"1867:100:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303038","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1925:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000008"},"visibility":"internal"},{"constant":true,"id":29,"mutability":"constant","name":"GAS_USED","nameLocation":"1999:8:0","nodeType":"VariableDeclaration","scope":443,"src":"1973:87:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303039","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2018:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000009"},"visibility":"internal"},{"constant":true,"id":32,"mutability":"constant","name":"PAD_GAS","nameLocation":"2092:7:0","nodeType":"VariableDeclaration","scope":443,"src":"2066:86:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303061","id":31,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2110:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x010000000000000000000000000000000000000a"},"visibility":"internal"},{"constant":true,"id":35,"mutability":"constant","name":"SHA512_256","nameLocation":"2228:10:0","nodeType":"VariableDeclaration","scope":443,"src":"2202:89:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"2202:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030313031","id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2249:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000101"},"visibility":"internal"},{"constant":true,"id":38,"mutability":"constant","name":"SHA512","nameLocation":"2323:6:0","nodeType":"VariableDeclaration","scope":443,"src":"2297:85:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"2297:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030313032","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2340:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000102"},"visibility":"internal"},{"constant":true,"id":41,"mutability":"constant","name":"SHA384","nameLocation":"2414:6:0","nodeType":"VariableDeclaration","scope":443,"src":"2388:85:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"2388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030313034","id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2431:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000104"},"visibility":"internal"},{"canonicalName":"Sapphire.Curve25519PublicKey","id":43,"name":"Curve25519PublicKey","nameLocation":"2485:19:0","nodeType":"UserDefinedValueTypeDefinition","src":"2480:36:0","underlyingType":{"id":42,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2508:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"Sapphire.Curve25519SecretKey","id":45,"name":"Curve25519SecretKey","nameLocation":"2526:19:0","nodeType":"UserDefinedValueTypeDefinition","src":"2521:36:0","underlyingType":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2549:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"Sapphire.SigningAlg","id":55,"members":[{"id":46,"name":"Ed25519Oasis","nameLocation":"2782:12:0","nodeType":"EnumValue","src":"2782:12:0"},{"id":47,"name":"Ed25519Pure","nameLocation":"2861:11:0","nodeType":"EnumValue","src":"2861:11:0"},{"id":48,"name":"Ed25519PrehashedSha512","nameLocation":"2956:22:0","nodeType":"EnumValue","src":"2956:22:0"},{"id":49,"name":"Secp256k1Oasis","nameLocation":"3183:14:0","nodeType":"EnumValue","src":"3183:14:0"},{"id":50,"name":"Secp256k1PrehashedKeccak256","nameLocation":"3344:27:0","nodeType":"EnumValue","src":"3344:27:0"},{"id":51,"name":"Secp256k1PrehashedSha256","nameLocation":"3447:24:0","nodeType":"EnumValue","src":"3447:24:0"},{"id":52,"name":"Sr25519","nameLocation":"3538:7:0","nodeType":"EnumValue","src":"3538:7:0"},{"id":53,"name":"Secp256r1PrehashedSha256","nameLocation":"3621:24:0","nodeType":"EnumValue","src":"3621:24:0"},{"id":54,"name":"Secp384r1PrehashedSha384","nameLocation":"3721:24:0","nodeType":"EnumValue","src":"3721:24:0"}],"name":"SigningAlg","nameLocation":"2568:10:0","nodeType":"EnumDefinition","src":"2563:1188:0"},{"body":{"id":85,"nodeType":"Block","src":"6117:202:0","statements":[{"assignments":[66,68],"declarations":[{"constant":false,"id":66,"mutability":"mutable","name":"success","nameLocation":"6133:7:0","nodeType":"VariableDeclaration","scope":85,"src":"6128:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":65,"name":"bool","nodeType":"ElementaryTypeName","src":"6128:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"entropy","nameLocation":"6155:7:0","nodeType":"VariableDeclaration","scope":85,"src":"6142:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":67,"name":"bytes","nodeType":"ElementaryTypeName","src":"6142:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":77,"initialValue":{"arguments":[{"arguments":[{"id":73,"name":"numBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"6214:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":74,"name":"pers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"6224:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":71,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6203:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":72,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6207:6:0","memberName":"encode","nodeType":"MemberAccess","src":"6203:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6203:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":69,"name":"RANDOM_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"6166:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6179:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"6166:23:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6166:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6127:112:0"},{"expression":{"arguments":[{"id":79,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"6257:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72616e646f6d42797465733a206661696c6564","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6266:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac","typeString":"literal_string \"randomBytes: failed\""},"value":"randomBytes: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac","typeString":"literal_string \"randomBytes: failed\""}],"id":78,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6249:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6249:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":82,"nodeType":"ExpressionStatement","src":"6249:39:0"},{"expression":{"id":83,"name":"entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"6305:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":64,"id":84,"nodeType":"Return","src":"6298:14:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"3757:2232:0","text":" @notice Generate `num_bytes` pseudo-random bytes, with an optional\n personalization string (`pers`) added into the hashing algorithm to\n increase domain separation when needed.\n #### Precompile address\n `0x0100000000000000000000000000000000000001`\n #### Gas cost\n 10,000 minimum plus 240 per output word plus 60 per word of the\n personalization string.\n #### Implementation details\n The mode (e.g. simulation or \"view call\" vs transaction execution) is fed\n to TupleHash (among other block-dependent components) to derive the \"key\n id\", which is then used to derive a per-block VRF key from\n epoch-ephemeral entropy (using KMAC256 and cSHAKE) so a different key\n id will result in a unique per-block VRF key. This per-block VRF key is\n then used to create the per-block root RNG which is then used to derive\n domain-separated (using Merlin transcripts) per-transaction random RNGs\n which are then exposed via this precompile. The KMAC, cSHAKE and\n TupleHash algorithms are SHA-3 derived functions defined in [NIST\n Special Publication 800-185](https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-185.pdf).\n #### DANGER: Prior to Sapphire ParaTime 0.6.0\n All view queries and simulated transactions (via `eth_call`) would\n receive the same entropy in-between blocks if they use the same\n `num_bytes` and `pers` parameters. If your contract requires\n confidentiality you should generate a secret in the constructor to be\n used with view calls:\n ```solidity\n Sapphire.randomBytes(64, abi.encodePacked(msg.sender, this.perContactSecret));\n ```\n #### Example\n ```solidity\n bytes memory randomPad = Sapphire.randomBytes(64, \"\");\n ```\n @param numBytes The number of bytes to return.\n @param pers An optional personalization string to increase domain\n        separation.\n @return The random bytes. If the number of bytes requested is too large\n         (over 1024), a smaller amount (1024) will be returned."},"id":86,"implemented":true,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"6003:11:0","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"numBytes","nameLocation":"6023:8:0","nodeType":"VariableDeclaration","scope":86,"src":"6015:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"6015:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"pers","nameLocation":"6046:4:0","nodeType":"VariableDeclaration","scope":86,"src":"6033:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59,"name":"bytes","nodeType":"ElementaryTypeName","src":"6033:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6014:37:0"},"returnParameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":86,"src":"6099:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":62,"name":"bytes","nodeType":"ElementaryTypeName","src":"6099:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6098:14:0"},"scope":443,"src":"5994:325:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":153,"nodeType":"Block","src":"6814:604:0","statements":[{"assignments":[99],"declarations":[{"constant":false,"id":99,"mutability":"mutable","name":"scalar","nameLocation":"6837:6:0","nodeType":"VariableDeclaration","scope":153,"src":"6824:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":98,"name":"bytes","nodeType":"ElementaryTypeName","src":"6824:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":104,"initialValue":{"arguments":[{"hexValue":"3332","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6858:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":102,"name":"pers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"6862:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":100,"name":"randomBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"6846:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) view returns (bytes memory)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6846:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6824:43:0"},{"expression":{"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":105,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"6928:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":107,"indexExpression":{"hexValue":"30","id":106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6935:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"&=","rightHandSide":{"hexValue":"30786638","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6941:4:0","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"0xf8"},"src":"6928:17:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":110,"nodeType":"ExpressionStatement","src":"6928:17:0"},{"expression":{"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":111,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"7015:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":113,"indexExpression":{"hexValue":"3331","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7022:2:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"&=","rightHandSide":{"hexValue":"30783766","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7029:4:0","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"0x7f"},"src":"7015:18:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":116,"nodeType":"ExpressionStatement","src":"7015:18:0"},{"expression":{"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":117,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"7068:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":119,"indexExpression":{"hexValue":"3331","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7075:2:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7068:10:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"hexValue":"30783430","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7082:4:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"7068:18:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":122,"nodeType":"ExpressionStatement","src":"7068:18:0"},{"assignments":[124,126],"declarations":[{"constant":false,"id":124,"mutability":"mutable","name":"success","nameLocation":"7123:7:0","nodeType":"VariableDeclaration","scope":153,"src":"7118:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":123,"name":"bool","nodeType":"ElementaryTypeName","src":"7118:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"pkBytes","nameLocation":"7145:7:0","nodeType":"VariableDeclaration","scope":153,"src":"7132:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":125,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":131,"initialValue":{"arguments":[{"id":129,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"7202:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":127,"name":"CURVE25519_PUBLIC_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"7156:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7178:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"7156:32:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7156:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7117:101:0"},{"expression":{"arguments":[{"id":133,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"7236:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"67656e206375727665323535313920706b3a206661696c6564","id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7245:27:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a9a56956fb564bd7fa7e5455f2d50e37d7cff16ebd3280d11122562b576157d","typeString":"literal_string \"gen curve25519 pk: failed\""},"value":"gen curve25519 pk: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a9a56956fb564bd7fa7e5455f2d50e37d7cff16ebd3280d11122562b576157d","typeString":"literal_string \"gen curve25519 pk: failed\""}],"id":132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7228:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7228:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"7228:45:0"},{"expression":{"components":[{"arguments":[{"arguments":[{"id":141,"name":"pkBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"7337:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7329:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7329:7:0","typeDescriptions":{}}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7329:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":137,"name":"Curve25519PublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"7304:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Curve25519PublicKey_$43_$","typeString":"type(Sapphire.Curve25519PublicKey)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7324:4:0","memberName":"wrap","nodeType":"MemberAccess","src":"7304:24:0","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Curve25519PublicKey_$43_$","typeString":"function (bytes32) pure returns (Sapphire.Curve25519PublicKey)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7304:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"}},{"arguments":[{"arguments":[{"id":148,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"7393:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7385:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7385:7:0","typeDescriptions":{}}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7385:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":144,"name":"Curve25519SecretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"7360:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Curve25519SecretKey_$45_$","typeString":"type(Sapphire.Curve25519SecretKey)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7380:4:0","memberName":"wrap","nodeType":"MemberAccess","src":"7360:24:0","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Curve25519SecretKey_$45_$","typeString":"function (bytes32) pure returns (Sapphire.Curve25519SecretKey)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"}}],"id":151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7290:121:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Curve25519PublicKey_$43_$_t_userDefinedValueType$_Curve25519SecretKey_$45_$","typeString":"tuple(Sapphire.Curve25519PublicKey,Sapphire.Curve25519SecretKey)"}},"functionReturnParameters":97,"id":152,"nodeType":"Return","src":"7283:128:0"}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"6325:331:0","text":" @notice Generates a Curve25519 keypair.\n @param pers An optional personalization string used to add domain\n separation.\n @return pk The Curve25519 public key. Useful for key exchange.\n @return sk The Curve25519 secret key. Pairs well with\n [deriveSymmetricKey](#derivesymmetrickey)."},"id":154,"implemented":true,"kind":"function","modifiers":[],"name":"generateCurve25519KeyPair","nameLocation":"6670:25:0","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"pers","nameLocation":"6709:4:0","nodeType":"VariableDeclaration","scope":154,"src":"6696:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":88,"name":"bytes","nodeType":"ElementaryTypeName","src":"6696:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6695:19:0"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"pk","nameLocation":"6782:2:0","nodeType":"VariableDeclaration","scope":154,"src":"6762:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"},"typeName":{"id":92,"nodeType":"UserDefinedTypeName","pathNode":{"id":91,"name":"Curve25519PublicKey","nameLocations":["6762:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":43,"src":"6762:19:0"},"referencedDeclaration":43,"src":"6762:19:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"sk","nameLocation":"6806:2:0","nodeType":"VariableDeclaration","scope":154,"src":"6786:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"},"typeName":{"id":95,"nodeType":"UserDefinedTypeName","pathNode":{"id":94,"name":"Curve25519SecretKey","nameLocations":["6786:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"6786:19:0"},"referencedDeclaration":45,"src":"6786:19:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"}},"visibility":"internal"}],"src":"6761:48:0"},"scope":443,"src":"6661:757:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":189,"nodeType":"Block","src":"8156:230:0","statements":[{"assignments":[167,169],"declarations":[{"constant":false,"id":167,"mutability":"mutable","name":"success","nameLocation":"8172:7:0","nodeType":"VariableDeclaration","scope":189,"src":"8167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":166,"name":"bool","nodeType":"ElementaryTypeName","src":"8167:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"symmetric","nameLocation":"8194:9:0","nodeType":"VariableDeclaration","scope":189,"src":"8181:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":168,"name":"bytes","nodeType":"ElementaryTypeName","src":"8181:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":178,"initialValue":{"arguments":[{"arguments":[{"id":174,"name":"peerPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"8253:13:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"}},{"id":175,"name":"secretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"8268:9:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"},{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"}],"expression":{"id":172,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8242:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8246:6:0","memberName":"encode","nodeType":"MemberAccess","src":"8242:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8242:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":170,"name":"DERIVE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"8207:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8218:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"8207:21:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8207:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8166:122:0"},{"expression":{"arguments":[{"id":180,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"8306:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64657269766553796d6d65747269634b65793a206661696c6564","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8315:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_987d340c438896174a2eb0db3a73ef80f720679a81bbb0b9ea3aa4467ab72d02","typeString":"literal_string \"deriveSymmetricKey: failed\""},"value":"deriveSymmetricKey: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_987d340c438896174a2eb0db3a73ef80f720679a81bbb0b9ea3aa4467ab72d02","typeString":"literal_string \"deriveSymmetricKey: failed\""}],"id":179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8298:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8298:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":183,"nodeType":"ExpressionStatement","src":"8298:46:0"},{"expression":{"arguments":[{"id":186,"name":"symmetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"8369:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8361:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:0","typeDescriptions":{}}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":165,"id":188,"nodeType":"Return","src":"8354:25:0"}]},"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"7424:579:0","text":" @notice Derive a symmetric key from a pair of keys using x25519.\n #### Precompile address\n `0x0100000000000000000000000000000000000002`\n #### Gas cost\n 100,000\n #### Example\n ```solidity\n bytes32 publicKey = ... ;\n bytes32 privateKey = ... ;\n bytes32 symmetric = Sapphire.deriveSymmetricKey(publicKey, privateKey);\n ```\n @param peerPublicKey The peer's public key.\n @param secretKey Your secret key.\n @return A derived symmetric key."},"id":190,"implemented":true,"kind":"function","modifiers":[],"name":"deriveSymmetricKey","nameLocation":"8017:18:0","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"peerPublicKey","nameLocation":"8065:13:0","nodeType":"VariableDeclaration","scope":190,"src":"8045:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"},"typeName":{"id":157,"nodeType":"UserDefinedTypeName","pathNode":{"id":156,"name":"Curve25519PublicKey","nameLocations":["8045:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":43,"src":"8045:19:0"},"referencedDeclaration":43,"src":"8045:19:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$43","typeString":"Sapphire.Curve25519PublicKey"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"secretKey","nameLocation":"8108:9:0","nodeType":"VariableDeclaration","scope":190,"src":"8088:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"},"typeName":{"id":160,"nodeType":"UserDefinedTypeName","pathNode":{"id":159,"name":"Curve25519SecretKey","nameLocations":["8088:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"8088:19:0"},"referencedDeclaration":45,"src":"8088:19:0","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$45","typeString":"Sapphire.Curve25519SecretKey"}},"visibility":"internal"}],"src":"8035:88:0"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":190,"src":"8147:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8147:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8146:9:0"},"scope":443,"src":"8008:378:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"9556:222:0","statements":[{"assignments":[205,207],"declarations":[{"constant":false,"id":205,"mutability":"mutable","name":"success","nameLocation":"9572:7:0","nodeType":"VariableDeclaration","scope":226,"src":"9567:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":204,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"ciphertext","nameLocation":"9594:10:0","nodeType":"VariableDeclaration","scope":226,"src":"9581:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":206,"name":"bytes","nodeType":"ElementaryTypeName","src":"9581:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":218,"initialValue":{"arguments":[{"arguments":[{"id":212,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"9651:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"9656:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"plaintext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"9663:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":215,"name":"additionalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"9674:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":210,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9640:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9644:6:0","memberName":"encode","nodeType":"MemberAccess","src":"9640:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9640:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":208,"name":"ENCRYPT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"9608:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9616:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"9608:18:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9608:91:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9566:133:0"},{"expression":{"arguments":[{"id":220,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"9717:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"656e63727970743a206661696c6564","id":221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9726:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5614603d541e467d6f35299b6c494d6d7c96318fd9033e95f551373c3052a781","typeString":"literal_string \"encrypt: failed\""},"value":"encrypt: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5614603d541e467d6f35299b6c494d6d7c96318fd9033e95f551373c3052a781","typeString":"literal_string \"encrypt: failed\""}],"id":219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9709:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9709:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"ExpressionStatement","src":"9709:35:0"},{"expression":{"id":224,"name":"ciphertext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"9761:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":203,"id":225,"nodeType":"Return","src":"9754:17:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"8392:986:0","text":" @notice Encrypt and authenticate the plaintext and additional data using\n DeoxysII.\n #### Precompile address\n `0x0100000000000000000000000000000000000003`\n #### Gas cost\n 50,000 minimum plus 100 per word of input\n #### Example\n ```solidity\n bytes32 key = ... ;\n bytes32 nonce = ... ;\n bytes memory text = \"plain text\";\n bytes memory ad = \"additional data\";\n bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n ```\n @param key The key to use for encryption.\n @param nonce The nonce. Note that only the first 15 bytes of this\n parameter are used.\n @param plaintext The plaintext to encrypt and authenticate.\n @param additionalData The additional data to authenticate.\n @return The ciphertext with appended auth tag."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"encrypt","nameLocation":"9392:7:0","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"key","nameLocation":"9417:3:0","nodeType":"VariableDeclaration","scope":227,"src":"9409:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9409:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"nonce","nameLocation":"9438:5:0","nodeType":"VariableDeclaration","scope":227,"src":"9430:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9430:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"plaintext","nameLocation":"9466:9:0","nodeType":"VariableDeclaration","scope":227,"src":"9453:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":196,"name":"bytes","nodeType":"ElementaryTypeName","src":"9453:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"additionalData","nameLocation":"9498:14:0","nodeType":"VariableDeclaration","scope":227,"src":"9485:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":198,"name":"bytes","nodeType":"ElementaryTypeName","src":"9485:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9399:119:0"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"9542:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":201,"name":"bytes","nodeType":"ElementaryTypeName","src":"9542:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9541:14:0"},"scope":443,"src":"9383:395:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":263,"nodeType":"Block","src":"11014:221:0","statements":[{"assignments":[242,244],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"success","nameLocation":"11030:7:0","nodeType":"VariableDeclaration","scope":263,"src":"11025:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":241,"name":"bool","nodeType":"ElementaryTypeName","src":"11025:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"plaintext","nameLocation":"11052:9:0","nodeType":"VariableDeclaration","scope":263,"src":"11039:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":243,"name":"bytes","nodeType":"ElementaryTypeName","src":"11039:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":255,"initialValue":{"arguments":[{"arguments":[{"id":249,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"11108:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":250,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"11113:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":251,"name":"ciphertext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"11120:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":252,"name":"additionalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"11132:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":247,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11097:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11101:6:0","memberName":"encode","nodeType":"MemberAccess","src":"11097:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11097:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":245,"name":"DECRYPT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"11065:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11073:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"11065:18:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:92:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11024:133:0"},{"expression":{"arguments":[{"id":257,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"11175:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"646563727970743a206661696c6564","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11184:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_903e0471dcbfc795d05065e8a540355c389c64753c3dd674c3f3e786b2d3807c","typeString":"literal_string \"decrypt: failed\""},"value":"decrypt: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_903e0471dcbfc795d05065e8a540355c389c64753c3dd674c3f3e786b2d3807c","typeString":"literal_string \"decrypt: failed\""}],"id":256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11167:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11167:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"ExpressionStatement","src":"11167:35:0"},{"expression":{"id":261,"name":"plaintext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"11219:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":240,"id":262,"nodeType":"Return","src":"11212:16:0"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"9784:1051:0","text":" @notice Decrypt and authenticate the ciphertext and additional data using\n DeoxysII. Reverts if the auth tag is incorrect.\n #### Precompile address\n `0x0100000000000000000000000000000000000004`\n #### Gas cost\n 50,000 minimum plus 100 per word of input\n #### Example\n ```solidity\n bytes32 key = ... ;\n bytes32 nonce = ... ;\n bytes memory text = \"plain text\";\n bytes memory ad = \"additional data\";\n bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n ```\n @param key The key to use for decryption.\n @param nonce The nonce. Note that only the first 15 bytes of this\n parameter are used.\n @param ciphertext The ciphertext with tag to decrypt and authenticate.\n @param additionalData The additional data to authenticate against the\n ciphertext.\n @return The original plaintext."},"id":264,"implemented":true,"kind":"function","modifiers":[],"name":"decrypt","nameLocation":"10849:7:0","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"key","nameLocation":"10874:3:0","nodeType":"VariableDeclaration","scope":264,"src":"10866:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10866:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"nonce","nameLocation":"10895:5:0","nodeType":"VariableDeclaration","scope":264,"src":"10887:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10887:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"ciphertext","nameLocation":"10923:10:0","nodeType":"VariableDeclaration","scope":264,"src":"10910:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":233,"name":"bytes","nodeType":"ElementaryTypeName","src":"10910:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"additionalData","nameLocation":"10956:14:0","nodeType":"VariableDeclaration","scope":264,"src":"10943:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":235,"name":"bytes","nodeType":"ElementaryTypeName","src":"10943:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10856:120:0"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"11000:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":238,"name":"bytes","nodeType":"ElementaryTypeName","src":"11000:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10999:14:0"},"scope":443,"src":"10840:395:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"13244:236:0","statements":[{"assignments":[278,280],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"success","nameLocation":"13260:7:0","nodeType":"VariableDeclaration","scope":305,"src":"13255:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":277,"name":"bool","nodeType":"ElementaryTypeName","src":"13255:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"keypair","nameLocation":"13282:7:0","nodeType":"VariableDeclaration","scope":305,"src":"13269:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":279,"name":"bytes","nodeType":"ElementaryTypeName","src":"13269:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":289,"initialValue":{"arguments":[{"arguments":[{"id":285,"name":"alg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"13353:3:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},{"id":286,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"13358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":283,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13342:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13346:6:0","memberName":"encode","nodeType":"MemberAccess","src":"13342:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13342:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":281,"name":"GENERATE_SIGNING_KEYPAIR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"13293:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13331:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"13293:48:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13293:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13254:110:0"},{"expression":{"arguments":[{"id":291,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"13382:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"67656e207369676e696e67206b6579706169723a206661696c6564","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13391:29:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b9267465e161c284a8a39384fdde2f97aa1902373695a1437fb9bfd91d7de20","typeString":"literal_string \"gen signing keypair: failed\""},"value":"gen signing keypair: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b9267465e161c284a8a39384fdde2f97aa1902373695a1437fb9bfd91d7de20","typeString":"literal_string \"gen signing keypair: failed\""}],"id":290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13374:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13374:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"ExpressionStatement","src":"13374:47:0"},{"expression":{"arguments":[{"id":297,"name":"keypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"13449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13459:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":298,"name":"bytes","nodeType":"ElementaryTypeName","src":"13459:5:0","typeDescriptions":{}}},{"id":301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13466:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":300,"name":"bytes","nodeType":"ElementaryTypeName","src":"13466:5:0","typeDescriptions":{}}}],"id":302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:14:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(bytes storage pointer),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(bytes storage pointer),type(bytes storage pointer))"}],"expression":{"id":295,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13438:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13442:6:0","memberName":"decode","nodeType":"MemberAccess","src":"13438:10:0","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13438:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,bytes memory)"}},"functionReturnParameters":276,"id":304,"nodeType":"Return","src":"13431:42:0"}]},"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"11241:1832:0","text":" @notice Generate a public/private key pair using the specified method and\n seed. The available methods are items in the\n [`Sapphire.SigningAlg`](#signingalg) enum. Note, however, that the\n generation method ignores subvariants, so all three Ed25519-based are\n equivalent, and all Secp256k1 & Secp256r1 based methods are equivalent.\n Sr25519 is not available and will return an error.\n #### Precompile address\n `0x0100000000000000000000000000000000000005`\n #### Gas Cost\n ##### Ed25519: 1,000 gas\n - `0` (`Ed25519Oasis`)\n - `1` (`Ed25519Pure`)\n - `2` (`Ed25519PrehashedSha512`)\n ##### Secp256k1: 1,500 gas.\n - `3` (`Secp256k1Oasis`)\n - `4` (`Secp256k1PrehashedKeccak256`)\n - `5` (`Secp256k1PrehashedSha256`)\n ##### Secp256r1: 4,000 gas\n - `7` (`Secp256r1PrehashedSha256`)\n #### Public Key Format\n ##### Ed25519\n 32 bytes\n ##### Secp256k1 & Secp256r1\n 33 bytes, compressed format (`0x02` or `0x03` prefix, then 32 byte X\n coordinate).\n #### Example\n ```solidity\n bytes memory seed = hex\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\";\n bytes memory publicKey;\n bytes memory privateKey;\n (publicKey, privateKey) = Sapphire.generateSigningKeyPair(Sapphire.SigningAlg.Ed25519Pure, seed);\n ```\n @param alg The signing alg for which to generate a keypair.\n @param seed The seed to use for generating the key pair. You can use the\n `randomBytes` method if you don't already have a seed.\n @return publicKey The public half of the keypair.\n @return secretKey The secret half of the keypair."},"id":306,"implemented":true,"kind":"function","modifiers":[],"name":"generateSigningKeyPair","nameLocation":"13087:22:0","nodeType":"FunctionDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"alg","nameLocation":"13121:3:0","nodeType":"VariableDeclaration","scope":306,"src":"13110:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},"typeName":{"id":267,"nodeType":"UserDefinedTypeName","pathNode":{"id":266,"name":"SigningAlg","nameLocations":["13110:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":55,"src":"13110:10:0"},"referencedDeclaration":55,"src":"13110:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"seed","nameLocation":"13139:4:0","nodeType":"VariableDeclaration","scope":306,"src":"13126:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":269,"name":"bytes","nodeType":"ElementaryTypeName","src":"13126:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13109:35:0"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"publicKey","nameLocation":"13205:9:0","nodeType":"VariableDeclaration","scope":306,"src":"13192:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":272,"name":"bytes","nodeType":"ElementaryTypeName","src":"13192:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"secretKey","nameLocation":"13229:9:0","nodeType":"VariableDeclaration","scope":306,"src":"13216:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":274,"name":"bytes","nodeType":"ElementaryTypeName","src":"13216:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13191:48:0"},"scope":443,"src":"13078:402:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":343,"nodeType":"Block","src":"16286:210:0","statements":[{"assignments":[322,324],"declarations":[{"constant":false,"id":322,"mutability":"mutable","name":"success","nameLocation":"16302:7:0","nodeType":"VariableDeclaration","scope":343,"src":"16297:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":321,"name":"bool","nodeType":"ElementaryTypeName","src":"16297:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"sig","nameLocation":"16324:3:0","nodeType":"VariableDeclaration","scope":343,"src":"16311:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":323,"name":"bytes","nodeType":"ElementaryTypeName","src":"16311:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":335,"initialValue":{"arguments":[{"arguments":[{"id":329,"name":"alg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"16378:3:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},{"id":330,"name":"secretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"16383:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":331,"name":"contextOrHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"16394:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":332,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"16409:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":327,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16367:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16371:6:0","memberName":"encode","nodeType":"MemberAccess","src":"16367:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16367:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":325,"name":"SIGN_DIGEST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"16331:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16343:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"16331:22:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16331:96:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16296:131:0"},{"expression":{"arguments":[{"id":337,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"16445:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7369676e3a206661696c6564","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16454:14:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_30424c91df67870892b008f1299c54dc8a7ff30cbedf2b16aaa52c514b69b2af","typeString":"literal_string \"sign: failed\""},"value":"sign: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30424c91df67870892b008f1299c54dc8a7ff30cbedf2b16aaa52c514b69b2af","typeString":"literal_string \"sign: failed\""}],"id":336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16437:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16437:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":340,"nodeType":"ExpressionStatement","src":"16437:32:0"},{"expression":{"id":341,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"16486:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":320,"id":342,"nodeType":"Return","src":"16479:10:0"}]},"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"13486:2606:0","text":" @notice Sign a message within the provided context using the specified\n algorithm, and return the signature. The `context_or_digest` and\n `messages` parameters change in meaning slightly depending on the method\n requested. For methods that take a context in addition to the message you\n must pass the context in the `context_or_digest` parameter and use\n `message` as expected. For methods that take a pre-existing hash of the\n message, pass that in `context_or_digest` and leave `message` empty.\n Specifically the `Ed25519Oasis` and `Secp256k1Oasis` variants take both a\n context and a message (each are variable length `bytes`), the context\n serves as a domain separator.\n #### Precompile address\n `0x0100000000000000000000000000000000000006`\n #### Gas cost\n See below for the method-dependent base cost, plus 8 gas per 32 bytes of\n context and message except digest.\n #### Signing algorithms\n - `0` (`Ed25519Oasis`): 1,500 gas, variable length context and message.\n - `1` (`Ed25519Pure`): 1,500 gas, empty context, variable length message.\n - `2` (`Ed25519PrehashedSha512`): 1,500 gas, pre-existing SHA-512 hash\n   (64 bytes) as context, empty message.\n - `3` (`Secp256k1Oasis`): 3,000 gas, variable length context and message\n - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas, pre-existing hash\n   (32 bytes) as context, empty message.\n - `5` (`Secp256k1PrehashedSha256`): 3,000 gas, pre-existing hash (32\n   bytes) as context, empty message.\n - `7` (`Secp256r1PrehashedSha256`): 9,000 gas, pre-existing hash (32\n   bytes) as context, empty message.\n #### Example\n ```solidity\n Sapphire.SigningAlg alg = Sapphire.SigningAlg.Ed25519Pure;\n bytes memory pk;\n bytes memory sk;\n (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n bytes memory signature = Sapphire.sign(alg, sk, \"\", \"signed message\");\n ```\n @param alg The signing algorithm to use.\n @param secretKey The secret key to use for signing. The key must be valid\n for use with the requested algorithm.\n @param contextOrHash Domain-Separator Context, or precomputed hash bytes.\n @param message Message to sign, should be zero-length if precomputed hash\n given.\n @return signature The resulting signature.\n @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_sign"},"id":344,"implemented":true,"kind":"function","modifiers":[],"name":"sign","nameLocation":"16106:4:0","nodeType":"FunctionDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"alg","nameLocation":"16131:3:0","nodeType":"VariableDeclaration","scope":344,"src":"16120:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},"typeName":{"id":309,"nodeType":"UserDefinedTypeName","pathNode":{"id":308,"name":"SigningAlg","nameLocations":["16120:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":55,"src":"16120:10:0"},"referencedDeclaration":55,"src":"16120:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"secretKey","nameLocation":"16157:9:0","nodeType":"VariableDeclaration","scope":344,"src":"16144:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":311,"name":"bytes","nodeType":"ElementaryTypeName","src":"16144:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"contextOrHash","nameLocation":"16189:13:0","nodeType":"VariableDeclaration","scope":344,"src":"16176:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":313,"name":"bytes","nodeType":"ElementaryTypeName","src":"16176:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"message","nameLocation":"16225:7:0","nodeType":"VariableDeclaration","scope":344,"src":"16212:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":315,"name":"bytes","nodeType":"ElementaryTypeName","src":"16212:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16110:128:0"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"signature","nameLocation":"16275:9:0","nodeType":"VariableDeclaration","scope":344,"src":"16262:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":318,"name":"bytes","nodeType":"ElementaryTypeName","src":"16262:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16261:24:0"},"scope":443,"src":"16097:399:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":390,"nodeType":"Block","src":"18816:241:0","statements":[{"assignments":[362,364],"declarations":[{"constant":false,"id":362,"mutability":"mutable","name":"success","nameLocation":"18832:7:0","nodeType":"VariableDeclaration","scope":390,"src":"18827:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":361,"name":"bool","nodeType":"ElementaryTypeName","src":"18827:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"v","nameLocation":"18854:1:0","nodeType":"VariableDeclaration","scope":390,"src":"18841:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":363,"name":"bytes","nodeType":"ElementaryTypeName","src":"18841:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":376,"initialValue":{"arguments":[{"arguments":[{"id":369,"name":"alg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"18908:3:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},{"id":370,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"18913:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":371,"name":"contextOrHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"18924:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":372,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"18939:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":373,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"18948:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":367,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18897:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18901:6:0","memberName":"encode","nodeType":"MemberAccess","src":"18897:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18897:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":365,"name":"VERIFY_DIGEST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"18859:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18873:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"18859:24:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18859:109:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18826:142:0"},{"expression":{"arguments":[{"id":378,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"18986:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7665726966793a206661696c6564","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18995:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""},"value":"verify: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""}],"id":377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18978:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18978:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"18978:34:0"},{"expression":{"arguments":[{"id":384,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"19040:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19044:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":385,"name":"bool","nodeType":"ElementaryTypeName","src":"19044:4:0","typeDescriptions":{}}}],"id":387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19043:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":382,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19029:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19033:6:0","memberName":"decode","nodeType":"MemberAccess","src":"19029:10:0","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19029:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":360,"id":389,"nodeType":"Return","src":"19022:28:0"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"16502:2095:0","text":" @notice Verifies that the provided digest was signed with using the\n secret key corresponding to the provided private key and the specified\n signing algorithm.\n The `method`, `context_or_digest` and `message` parameters have the same\n meaning as described above in the [sign()](#sign) function.\n #### Precompile address\n `0x0100000000000000000000000000000000000007`\n #### Gas cost\n The algorithm-specific base cost below, with an additional **8 gas per\n 32 bytes** of `context` and `message` for the `Ed25519Oasis`,\n `Ed25519Pure` and `Secp256k1Oasis` algorithms.\n - `0` (`Ed25519Oasis`): 2,000 gas\n - `1` (`Ed25519Pure`): 2,000 gas\n - `2` (`Ed25519PrehashedSha512`): 2,000 gas\n - `3` (`Secp256k1Oasis`): 3,000 gas\n - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas\n - `5` (`Secp256k1PrehashedSha256`): 3,000 gas\n - `7` (`Secp256r1PrehashedSha256`): 7,900 gas\n #### Example\n ```solidity\n Sapphire.SigningAlg alg = Sapphire.SigningAlg.Secp256k1PrehashedKeccak256;\n bytes memory pk;\n bytes memory sk;\n bytes memory digest = abi.encodePacked(keccak256(\"signed message\"));\n (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n bytes memory signature = Sapphire.sign(alg, sk, digest, \"\");\n require( Sapphire.verify(alg, pk, digest, \"\", signature) );\n ```\n @param alg The signing algorithm by which the signature was generated.\n @param publicKey The public key against which to check the signature.\n @param contextOrHash Domain-Separator Context, or precomputed hash bytes\n @param message The hash of the message that was signed, should be\n zero-length if precomputed hash was given.\n @param signature The signature to check.\n @return verified Whether the signature is valid for the given parameters.\n @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_verify"},"id":391,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"18611:6:0","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"alg","nameLocation":"18638:3:0","nodeType":"VariableDeclaration","scope":391,"src":"18627:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"},"typeName":{"id":347,"nodeType":"UserDefinedTypeName","pathNode":{"id":346,"name":"SigningAlg","nameLocations":["18627:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":55,"src":"18627:10:0"},"referencedDeclaration":55,"src":"18627:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$55","typeString":"enum Sapphire.SigningAlg"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"publicKey","nameLocation":"18664:9:0","nodeType":"VariableDeclaration","scope":391,"src":"18651:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":349,"name":"bytes","nodeType":"ElementaryTypeName","src":"18651:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"contextOrHash","nameLocation":"18696:13:0","nodeType":"VariableDeclaration","scope":391,"src":"18683:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":351,"name":"bytes","nodeType":"ElementaryTypeName","src":"18683:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"message","nameLocation":"18732:7:0","nodeType":"VariableDeclaration","scope":391,"src":"18719:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":353,"name":"bytes","nodeType":"ElementaryTypeName","src":"18719:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"signature","nameLocation":"18762:9:0","nodeType":"VariableDeclaration","scope":391,"src":"18749:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"18749:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18617:160:0"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"verified","nameLocation":"18806:8:0","nodeType":"VariableDeclaration","scope":391,"src":"18801:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":358,"name":"bool","nodeType":"ElementaryTypeName","src":"18801:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18800:15:0"},"scope":443,"src":"18602:455:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"19431:120:0","statements":[{"assignments":[398,null],"declarations":[{"constant":false,"id":398,"mutability":"mutable","name":"success","nameLocation":"19447:7:0","nodeType":"VariableDeclaration","scope":412,"src":"19442:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"19442:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":406,"initialValue":{"arguments":[{"arguments":[{"id":403,"name":"toAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"19490:8:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":401,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19479:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19483:6:0","memberName":"encode","nodeType":"MemberAccess","src":"19479:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19479:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":399,"name":"PAD_GAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"19460:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19468:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"19460:18:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19460:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19441:59:0"},{"expression":{"arguments":[{"id":408,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"19518:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7665726966793a206661696c6564","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19527:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""},"value":"verify: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""}],"id":407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19510:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19510:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"ExpressionStatement","src":"19510:34:0"}]},"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"19063:315:0","text":" @notice Set the current transactions gas usage to a specific amount\n @dev Will cause a reversion if the current usage is more than the amount.\n @param toAmount Gas usage will be set to this amount\n @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_pad_gas"},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"padGas","nameLocation":"19392:6:0","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"toAmount","nameLocation":"19407:8:0","nodeType":"VariableDeclaration","scope":413,"src":"19399:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":393,"name":"uint128","nodeType":"ElementaryTypeName","src":"19399:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"19398:18:0"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"19431:0:0"},"scope":443,"src":"19383:168:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"19780:158:0","statements":[{"assignments":[420,422],"declarations":[{"constant":false,"id":420,"mutability":"mutable","name":"success","nameLocation":"19796:7:0","nodeType":"VariableDeclaration","scope":441,"src":"19791:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"19791:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"v","nameLocation":"19818:1:0","nodeType":"VariableDeclaration","scope":441,"src":"19805:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":421,"name":"bytes","nodeType":"ElementaryTypeName","src":"19805:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":427,"initialValue":{"arguments":[{"hexValue":"","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19843:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":423,"name":"GAS_USED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"19823:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19832:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"19823:19:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19823:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19790:56:0"},{"expression":{"arguments":[{"id":429,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"19864:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"676173757365643a206661696c6564","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19873:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e653402a1869061703cc1f5117b0dbd597348261905e9f4272ef2962baf4e02","typeString":"literal_string \"gasused: failed\""},"value":"gasused: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e653402a1869061703cc1f5117b0dbd597348261905e9f4272ef2962baf4e02","typeString":"literal_string \"gasused: failed\""}],"id":428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19856:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19856:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":432,"nodeType":"ExpressionStatement","src":"19856:35:0"},{"expression":{"arguments":[{"id":435,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"19919:1:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19923:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":436,"name":"uint64","nodeType":"ElementaryTypeName","src":"19923:6:0","typeDescriptions":{}}}],"id":438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19922:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"expression":{"id":433,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19908:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19912:6:0","memberName":"decode","nodeType":"MemberAccess","src":"19908:10:0","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19908:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":418,"id":440,"nodeType":"Return","src":"19901:30:0"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"19557:168:0","text":" @notice Returns the amount of gas currently used by the transaction\n @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_gas_used"},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"gasUsed","nameLocation":"19739:7:0","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"19746:2:0"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"19772:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":416,"name":"uint64","nodeType":"ElementaryTypeName","src":"19772:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"19771:8:0"},"scope":443,"src":"19730:208:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":527,"src":"1117:18823:0","usedErrors":[]},{"body":{"id":471,"nodeType":"Block","src":"21042:150:0","statements":[{"assignments":[452,454],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"success","nameLocation":"21054:7:0","nodeType":"VariableDeclaration","scope":471,"src":"21049:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":451,"name":"bool","nodeType":"ElementaryTypeName","src":"21049:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"output","nameLocation":"21076:6:0","nodeType":"VariableDeclaration","scope":471,"src":"21063:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"21063:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":460,"initialValue":{"arguments":[{"id":458,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"21117:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":455,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"21086:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$443_$","typeString":"type(library Sapphire)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21095:10:0","memberName":"SHA512_256","nodeType":"MemberAccess","referencedDeclaration":35,"src":"21086:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21106:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"21086:30:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21086:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"21048:75:0"},{"expression":{"arguments":[{"id":462,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"21138:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7368613531325f323536","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21147:12:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f75c2d6150bf32cccbc5bf7d89da5f677facb56533342da88f5e98d14214b528","typeString":"literal_string \"sha512_256\""},"value":"sha512_256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f75c2d6150bf32cccbc5bf7d89da5f677facb56533342da88f5e98d14214b528","typeString":"literal_string \"sha512_256\""}],"id":461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21130:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"21130:30:0"},{"expression":{"arguments":[{"id":468,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"21182:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21174:7:0","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21174:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":450,"id":470,"nodeType":"Return","src":"21167:22:0"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"19942:1029:0","text":" @notice Hash the input data with SHA-512/256, according to\n [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n #### Precompile address\n `0x0100000000000000000000000000000000000102`\n #### Gas cost\n 115 gas, then 13 gas per word\n #### Example\n ```solidity\n bytes32 result = sha512_256(abi.encodePacked(\"input data\"));\n ```\n #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n relevant if you are computing the hash of a secret message. The\n [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n vulnerable to length-extension attacks.\n @param input Bytes to hash.\n @return result 32 byte digest.\n @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512_256"},"id":472,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"sha512_256","nameLocation":"20981:10:0","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"input","nameLocation":"21005:5:0","nodeType":"VariableDeclaration","scope":472,"src":"20992:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":445,"name":"bytes","nodeType":"ElementaryTypeName","src":"20992:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20991:20:0"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"result","nameLocation":"21034:6:0","nodeType":"VariableDeclaration","scope":472,"src":"21026:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21026:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21025:16:0"},"scope":527,"src":"20972:220:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":498,"nodeType":"Block","src":"22287:114:0","statements":[{"assignments":[481],"declarations":[{"constant":false,"id":481,"mutability":"mutable","name":"success","nameLocation":"22298:7:0","nodeType":"VariableDeclaration","scope":498,"src":"22293:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":480,"name":"bool","nodeType":"ElementaryTypeName","src":"22293:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":482,"nodeType":"VariableDeclarationStatement","src":"22293:12:0"},{"expression":{"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":483,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"22313:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":484,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"22322:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":485,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"22312:17:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":489,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"22359:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":486,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"22332:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$443_$","typeString":"type(library Sapphire)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22341:6:0","memberName":"SHA512","nodeType":"MemberAccess","referencedDeclaration":38,"src":"22332:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22348:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"22332:26:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22332:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"22312:53:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"ExpressionStatement","src":"22312:53:0"},{"expression":{"arguments":[{"id":494,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"22380:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736861353132","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22389:8:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c0b70e157f7134bd6b024ec9293ed6f48b7e87b8f08a110da3cb9d2624b426a","typeString":"literal_string \"sha512\""},"value":"sha512"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c0b70e157f7134bd6b024ec9293ed6f48b7e87b8f08a110da3cb9d2624b426a","typeString":"literal_string \"sha512\""}],"id":493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22372:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22372:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"22372:26:0"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"21194:1021:0","text":" @notice Hash the input data with SHA-512, according to\n [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf)\n #### Precompile address\n `0x0100000000000000000000000000000000000101`\n #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n relevant if you are computing the hash of a secret message. The\n [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n vulnerable to length-extension attacks.\n #### Gas Cost\n 115 gas, then 13 gas per word\n #### Example\n ```solidity\n bytes memory result = sha512(abi.encodePacked(\"input data\"));\n ```\n @param input Bytes to hash.\n @return output 64 byte digest.\n @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512"},"id":499,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"sha512","nameLocation":"22225:6:0","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"input","nameLocation":"22245:5:0","nodeType":"VariableDeclaration","scope":499,"src":"22232:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":474,"name":"bytes","nodeType":"ElementaryTypeName","src":"22232:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22231:20:0"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"output","nameLocation":"22279:6:0","nodeType":"VariableDeclaration","scope":499,"src":"22266:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":477,"name":"bytes","nodeType":"ElementaryTypeName","src":"22266:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22265:21:0"},"scope":527,"src":"22216:185:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":525,"nodeType":"Block","src":"22748:114:0","statements":[{"assignments":[508],"declarations":[{"constant":false,"id":508,"mutability":"mutable","name":"success","nameLocation":"22759:7:0","nodeType":"VariableDeclaration","scope":525,"src":"22754:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":507,"name":"bool","nodeType":"ElementaryTypeName","src":"22754:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":509,"nodeType":"VariableDeclarationStatement","src":"22754:12:0"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":510,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"22774:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":511,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"22783:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":512,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"22773:17:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":516,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"22820:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":513,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"22793:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$443_$","typeString":"type(library Sapphire)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22802:6:0","memberName":"SHA384","nodeType":"MemberAccess","referencedDeclaration":41,"src":"22793:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22809:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"22793:26:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22793:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"22773:53:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"ExpressionStatement","src":"22773:53:0"},{"expression":{"arguments":[{"id":521,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"22841:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736861333834","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22850:8:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec6ff49708e722818e70930a24e1ab730a40b63a2d8cfc1f9445eec73ca5b6a9","typeString":"literal_string \"sha384\""},"value":"sha384"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec6ff49708e722818e70930a24e1ab730a40b63a2d8cfc1f9445eec73ca5b6a9","typeString":"literal_string \"sha384\""}],"id":520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22833:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22833:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"22833:26:0"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"22403:273:0","text":" @notice Hash the input data with SHA-384.\n @param input Bytes to hash.\n @return output 48 byte digest.\n @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha384"},"id":526,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"sha384","nameLocation":"22686:6:0","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"input","nameLocation":"22706:5:0","nodeType":"VariableDeclaration","scope":526,"src":"22693:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":501,"name":"bytes","nodeType":"ElementaryTypeName","src":"22693:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22692:20:0"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"output","nameLocation":"22740:6:0","nodeType":"VariableDeclaration","scope":526,"src":"22727:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":504,"name":"bytes","nodeType":"ElementaryTypeName","src":"22727:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22726:21:0"},"scope":527,"src":"22677:185:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"src":"39:22824:0"},"id":0},"contracts/Auction.sol":{"ast":{"absolutePath":"contracts/Auction.sol","exportedSymbols":{"NewAuction":[779],"Sapphire":[443],"sha384":[526],"sha512":[499],"sha512_256":[472]},"id":780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:1"},{"absolutePath":"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol","file":"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol","id":529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":780,"sourceUnit":527,"src":"60:66:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"NewAuction","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":779,"linearizedBaseContracts":[779],"name":"NewAuction","nameLocation":"139:10:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"08551a53","id":531,"mutability":"mutable","name":"seller","nameLocation":"204:6:1","nodeType":"VariableDeclaration","scope":779,"src":"181:29:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"181:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"constant":false,"functionSelector":"d6fbf202","id":533,"mutability":"mutable","name":"startingPrice","nameLocation":"257:13:1","nodeType":"VariableDeclaration","scope":779,"src":"242:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"242:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d57bde79","id":535,"mutability":"mutable","name":"highestBid","nameLocation":"325:10:1","nodeType":"VariableDeclaration","scope":779,"src":"310:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"310:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"91f90157","id":537,"mutability":"mutable","name":"highestBidder","nameLocation":"379:13:1","nodeType":"VariableDeclaration","scope":779,"src":"364:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"364:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"4b449cba","id":539,"mutability":"mutable","name":"auctionEndTime","nameLocation":"447:14:1","nodeType":"VariableDeclaration","scope":779,"src":"432:29:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"432:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"86433374","id":541,"mutability":"mutable","name":"auctionEnded","nameLocation":"515:12:1","nodeType":"VariableDeclaration","scope":779,"src":"503:24:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":540,"name":"bool","nodeType":"ElementaryTypeName","src":"503:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"b40a5627","id":543,"mutability":"mutable","name":"bidCount","nameLocation":"594:8:1","nodeType":"VariableDeclaration","scope":779,"src":"579:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"579:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"NewAuction.Bid","id":548,"members":[{"constant":false,"id":545,"mutability":"mutable","name":"bidder","nameLocation":"687:6:1","nodeType":"VariableDeclaration","scope":548,"src":"679:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"bid","nameLocation":"712:3:1","nodeType":"VariableDeclaration","scope":548,"src":"704:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Bid","nameLocation":"664:3:1","nodeType":"StructDefinition","scope":779,"src":"657:66:1","visibility":"public"},{"constant":false,"functionSelector":"4423c5f1","id":552,"mutability":"mutable","name":"bids","nameLocation":"744:4:1","nodeType":"VariableDeclaration","scope":779,"src":"731:17:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$548_storage_$dyn_storage","typeString":"struct NewAuction.Bid[]"},"typeName":{"baseType":{"id":550,"nodeType":"UserDefinedTypeName","pathNode":{"id":549,"name":"Bid","nameLocations":["731:3:1"],"nodeType":"IdentifierPath","referencedDeclaration":548,"src":"731:3:1"},"referencedDeclaration":548,"src":"731:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$548_storage_ptr","typeString":"struct NewAuction.Bid"}},"id":551,"nodeType":"ArrayTypeName","src":"731:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$548_storage_$dyn_storage_ptr","typeString":"struct NewAuction.Bid[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"ff2d32ce56b0b5d23a2d2e0fa74261ef152c762e716daa7e6eb1cc0fafa0a4e8","id":558,"name":"BidCreated","nameLocation":"800:10:1","nodeType":"EventDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"indexed":false,"mutability":"mutable","name":"bidder","nameLocation":"819:6:1","nodeType":"VariableDeclaration","scope":558,"src":"811:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"835:6:1","nodeType":"VariableDeclaration","scope":558,"src":"827:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"827:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"810:32:1"},"src":"794:49:1"},{"anonymous":false,"eventSelector":"daec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda","id":564,"name":"AuctionEnded","nameLocation":"855:12:1","nodeType":"EventDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"indexed":false,"mutability":"mutable","name":"winner","nameLocation":"876:6:1","nodeType":"VariableDeclaration","scope":564,"src":"868:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"868:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"indexed":false,"mutability":"mutable","name":"winningBid","nameLocation":"892:10:1","nodeType":"VariableDeclaration","scope":564,"src":"884:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"867:36:1"},"src":"849:55:1"},{"body":{"id":592,"nodeType":"Block","src":"1170:209:1","statements":[{"expression":{"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":573,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"1181:6:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":574,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"1190:7:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1181:16:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":576,"nodeType":"ExpressionStatement","src":"1181:16:1"},{"expression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":577,"name":"startingPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"1208:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":578,"name":"_startingPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"1224:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1208:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":580,"nodeType":"ExpressionStatement","src":"1208:30:1"},{"expression":{"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":581,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"1249:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":582,"name":"startingPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"1262:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1249:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":584,"nodeType":"ExpressionStatement","src":"1249:26:1"},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":585,"name":"auctionEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"1286:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":586,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1303:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1309:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"1303:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":588,"name":"_auctionEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"1321:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1303:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1286:50:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"1286:50:1"}]},"id":593,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"_seller","nameLocation":"1003:7:1","nodeType":"VariableDeclaration","scope":593,"src":"987:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"987:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"_startingPrice","nameLocation":"1054:14:1","nodeType":"VariableDeclaration","scope":593,"src":"1046:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"_auctionEndTime","nameLocation":"1120:15:1","nodeType":"VariableDeclaration","scope":593,"src":"1112:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1112:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"976:193:1"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"1170:0:1"},"scope":779,"src":"965:414:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":664,"nodeType":"Block","src":"1419:549:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":597,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1438:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1444:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"1438:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":599,"name":"auctionEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"1456:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1438:32:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756374696f6e2068617320656e646564","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1472:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","typeString":"literal_string \"Auction has ended\""},"value":"Auction has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","typeString":"literal_string \"Auction has ended\""}],"id":596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1430:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"1430:62:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1525:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1529:5:1","memberName":"value","nodeType":"MemberAccess","src":"1525:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":607,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"1537:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1525:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426964206d75737420626520686967686572207468616e207468652063757272656e74206869676865737420626964","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1562:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5","typeString":"literal_string \"Bid must be higher than the current highest bid\""},"value":"Bid must be higher than the current highest bid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5","typeString":"literal_string \"Bid must be higher than the current highest bid\""}],"id":604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1503:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1503:119:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"ExpressionStatement","src":"1503:119:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":612,"name":"highestBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"1637:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1662:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1654:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"1654:7:1","typeDescriptions":{}}},"id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1637:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":627,"nodeType":"IfStatement","src":"1633:103:1","trueBody":{"id":626,"nodeType":"Block","src":"1666:70:1","statements":[{"expression":{"arguments":[{"id":623,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"1713:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":620,"name":"highestBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"1689:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1681:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"1681:8:1","stateMutability":"payable","typeDescriptions":{}}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1681:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1704:8:1","memberName":"transfer","nodeType":"MemberAccess","src":"1681:31:1","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1681:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"ExpressionStatement","src":"1681:43:1"}]}},{"expression":{"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":628,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"1746:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":629,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1759:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1763:5:1","memberName":"value","nodeType":"MemberAccess","src":"1759:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1746:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":632,"nodeType":"ExpressionStatement","src":"1746:22:1"},{"expression":{"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":633,"name":"highestBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"1779:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1795:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1795:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1779:26:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":637,"nodeType":"ExpressionStatement","src":"1779:26:1"},{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"newBid","nameLocation":"1827:6:1","nodeType":"VariableDeclaration","scope":664,"src":"1816:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$548_memory_ptr","typeString":"struct NewAuction.Bid"},"typeName":{"id":639,"nodeType":"UserDefinedTypeName","pathNode":{"id":638,"name":"Bid","nameLocations":["1816:3:1"],"nodeType":"IdentifierPath","referencedDeclaration":548,"src":"1816:3:1"},"referencedDeclaration":548,"src":"1816:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$548_storage_ptr","typeString":"struct NewAuction.Bid"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"expression":{"id":642,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1840:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1844:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1840:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":644,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1852:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1856:5:1","memberName":"value","nodeType":"MemberAccess","src":"1852:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":641,"name":"Bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1836:3:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Bid_$548_storage_ptr_$","typeString":"type(struct NewAuction.Bid storage pointer)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1836:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$548_memory_ptr","typeString":"struct NewAuction.Bid memory"}},"nodeType":"VariableDeclarationStatement","src":"1816:46:1"},{"expression":{"arguments":[{"id":651,"name":"newBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"1883:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$548_memory_ptr","typeString":"struct NewAuction.Bid memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bid_$548_memory_ptr","typeString":"struct NewAuction.Bid memory"}],"expression":{"id":648,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1873:4:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$548_storage_$dyn_storage","typeString":"struct NewAuction.Bid storage ref[] storage ref"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1878:4:1","memberName":"push","nodeType":"MemberAccess","src":"1873:9:1","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Bid_$548_storage_$dyn_storage_ptr_$_t_struct$_Bid_$548_storage_$returns$__$attached_to$_t_array$_t_struct$_Bid_$548_storage_$dyn_storage_ptr_$","typeString":"function (struct NewAuction.Bid storage ref[] storage pointer,struct NewAuction.Bid storage ref)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"1873:17:1"},{"expression":{"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1901:10:1","subExpression":{"id":654,"name":"bidCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"1901:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":656,"nodeType":"ExpressionStatement","src":"1901:10:1"},{"eventCall":{"arguments":[{"expression":{"id":658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1938:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1942:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1938:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1950:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1954:5:1","memberName":"value","nodeType":"MemberAccess","src":"1950:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":657,"name":"BidCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"1927:10:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1927:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"EmitStatement","src":"1922:38:1"}]},"functionSelector":"1998aeef","id":665,"implemented":true,"kind":"function","modifiers":[],"name":"bid","nameLocation":"1396:3:1","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"1399:2:1"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"1419:0:1"},"scope":779,"src":"1387:581:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":715,"nodeType":"Block","src":"2050:384:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":675,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2069:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":676,"name":"bidCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"2078:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2069:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e6720496e646578","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2088:13:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd","typeString":"literal_string \"Wrong Index\""},"value":"Wrong Index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd","typeString":"literal_string \"Wrong Index\""}],"id":674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2061:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2061:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"ExpressionStatement","src":"2061:41:1"},{"assignments":[683],"declarations":[{"constant":false,"id":683,"mutability":"mutable","name":"getBid","nameLocation":"2124:6:1","nodeType":"VariableDeclaration","scope":715,"src":"2113:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$548_memory_ptr","typeString":"struct NewAuction.Bid"},"typeName":{"id":682,"nodeType":"UserDefinedTypeName","pathNode":{"id":681,"name":"Bid","nameLocations":["2113:3:1"],"nodeType":"IdentifierPath","referencedDeclaration":548,"src":"2113:3:1"},"referencedDeclaration":548,"src":"2113:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$548_storage_ptr","typeString":"struct NewAuction.Bid"}},"visibility":"internal"}],"id":687,"initialValue":{"baseExpression":{"id":684,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2133:4:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$548_storage_$dyn_storage","typeString":"struct NewAuction.Bid storage ref[] storage ref"}},"id":686,"indexExpression":{"id":685,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2138:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2133:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$548_storage","typeString":"struct NewAuction.Bid storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2113:31:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":689,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2163:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2169:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"2163:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":691,"name":"auctionEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"2181:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2163:32:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756374696f6e206973207374696c6c206f6e676f696e67","id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2197:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f","typeString":"literal_string \"Auction is still ongoing\""},"value":"Auction is still ongoing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f","typeString":"literal_string \"Auction is still ongoing\""}],"id":688,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2155:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2155:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"2155:69:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":697,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2257:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2261:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2257:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":699,"name":"highestBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"2271:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2257:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2288:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2292:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2288:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":703,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2302:6:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2288:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2257:51:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920486967686573742042696464657220616e642073656c6c65722063616e20636865636b2062696473","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2323:47:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf","typeString":"literal_string \"Only Highest Bidder and seller can check bids\""},"value":"Only Highest Bidder and seller can check bids"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf","typeString":"literal_string \"Only Highest Bidder and seller can check bids\""}],"id":696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2235:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2235:146:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"ExpressionStatement","src":"2235:146:1"},{"expression":{"components":[{"expression":{"id":709,"name":"getBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"2400:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$548_memory_ptr","typeString":"struct NewAuction.Bid memory"}},"id":710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2407:6:1","memberName":"bidder","nodeType":"MemberAccess","referencedDeclaration":545,"src":"2400:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":711,"name":"getBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"2415:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$548_memory_ptr","typeString":"struct NewAuction.Bid memory"}},"id":712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2422:3:1","memberName":"bid","nodeType":"MemberAccess","referencedDeclaration":547,"src":"2415:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2399:27:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":673,"id":714,"nodeType":"Return","src":"2392:34:1"}]},"functionSelector":"58ed1aae","id":716,"implemented":true,"kind":"function","modifiers":[],"name":"checkBid","nameLocation":"1985:8:1","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"index","nameLocation":"2002:5:1","nodeType":"VariableDeclaration","scope":716,"src":"1994:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1993:15:1"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2032:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"2032:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2041:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2031:18:1"},"scope":779,"src":"1976:458:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":723,"nodeType":"Block","src":"2505:40:1","statements":[{"expression":{"id":721,"name":"auctionEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"2523:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":720,"id":722,"nodeType":"Return","src":"2516:21:1"}]},"functionSelector":"d473f29e","id":724,"implemented":true,"kind":"function","modifiers":[],"name":"checkAuctionEndTime","nameLocation":"2451:19:1","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[],"src":"2470:2:1"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"2496:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"2496:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2495:9:1"},"scope":779,"src":"2442:103:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":750,"nodeType":"Block","src":"2653:367:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":728,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2715:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2721:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"2715:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":730,"name":"auctionEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"2734:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2715:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756374696f6e206973207374696c6c206f6e676f696e67","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2750:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f","typeString":"literal_string \"Auction is still ongoing\""},"value":"Auction is still ongoing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f","typeString":"literal_string \"Auction is still ongoing\""}],"id":727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2707:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2707:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"2707:70:1"},{"expression":{"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":735,"name":"auctionEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2788:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2803:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2788:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":738,"nodeType":"ExpressionStatement","src":"2788:19:1"},{"expression":{"arguments":[{"id":742,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2910:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":739,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2894:6:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2901:8:1","memberName":"transfer","nodeType":"MemberAccess","src":"2894:15:1","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"ExpressionStatement","src":"2894:27:1"},{"eventCall":{"arguments":[{"id":746,"name":"highestBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"2986:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":747,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3001:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":745,"name":"AuctionEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2973:12:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2973:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"EmitStatement","src":"2968:44:1"}]},"functionSelector":"fe67a54b","id":751,"implemented":true,"kind":"function","modifiers":[],"name":"endAuction","nameLocation":"2631:10:1","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[],"src":"2641:2:1"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"2653:0:1"},"scope":779,"src":"2622:398:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":777,"nodeType":"Block","src":"3217:218:1","statements":[{"expression":{"components":[{"id":768,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"3250:6:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":769,"name":"startingPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3271:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":770,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3299:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":771,"name":"highestBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"3324:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"auctionEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3352:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":773,"name":"auctionEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3381:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":774,"name":"bidCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"3408:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3235:192:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(address payable,uint256,uint256,address,uint256,bool,uint256)"}},"functionReturnParameters":767,"id":776,"nodeType":"Return","src":"3228:199:1"}]},"functionSelector":"3a6dcea2","id":778,"implemented":true,"kind":"function","modifiers":[],"name":"getAuctionDetails","nameLocation":"3082:17:1","nodeType":"FunctionDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"3099:2:1"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"3152:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"3152:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"3161:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"3161:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"3170:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"3179:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"3179:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"3188:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":761,"name":"uint256","nodeType":"ElementaryTypeName","src":"3188:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"3197:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":763,"name":"bool","nodeType":"ElementaryTypeName","src":"3197:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"3203:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"3203:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3151:60:1"},"scope":779,"src":"3073:362:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":780,"src":"130:3308:1","usedErrors":[]}],"src":"33:3407:1"},"id":1}},"contracts":{"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol":{"Sapphire":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa50efe85c1a4c3a6f631c1b9b520bb33c793515cdc2fa0d39c2918e69b8483a64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA POP 0xEF 0xE8 0x5C BYTE 0x4C GASPRICE PUSH16 0x631C1B9B520BB33C793515CDC2FA0D39 0xC2 SWAP2 DUP15 PUSH10 0xB8483A64736F6C634300 ADDMOD SGT STOP CALLER ","sourceMap":"1117:18823:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa50efe85c1a4c3a6f631c1b9b520bb33c793515cdc2fa0d39c2918e69b8483a64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA POP 0xEF 0xE8 0x5C BYTE 0x4C GASPRICE PUSH16 0x631C1B9B520BB33C793515CDC2FA0D39 0xC2 SWAP2 DUP15 PUSH10 0xB8483A64736F6C634300 ADDMOD SGT STOP CALLER ","sourceMap":"1117:18823:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Sapphire\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library provides a number of convenient wrappers for cryptographic operations such as the x25519 key derivation, Deoxys-II-based encryption and decryption, signing key generation, message digest signing and verification, gas padding and hashing. Most of the mentioned functions are implemented as Sapphire's precompiles and are cheap to call. #### Calling Precompiles Manually You can override the wrappers and call Sapphire precompiles by dispatching calls to specific well-known contract addresses, as described below. The __Precompile address__ section of each function will show you the address of the corresponding precompile. Input parameters should be packed into a contiguous memory region with each chunk of data padded to 32 bytes as usual. The recommended way to construct parameter byte sequences in Solidity is with `abi.encode` and `abi.decode`, which will transparently handle things like putting `bytes` lengths in the correct position.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":\"Sapphire\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x81a0aa5766f7c48ea799114f44e902b2eb11f21808db23d56b6ca9edd48b8f59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94bd0c5263e98788d38bf7b6c24781dac3df4d5cb14045f70d14e208719c292\",\"dweb:/ipfs/QmZKEwnG9a9uPbgWCPVcbW7WGTy53Su6P1DTV95goPs4yU\"]}},\"version\":1}"}},"contracts/Auction.sol":{"NewAuction":{"abi":[{"inputs":[{"internalType":"address payable","name":"_seller","type":"address"},{"internalType":"uint256","name":"_startingPrice","type":"uint256"},{"internalType":"uint256","name":"_auctionEndTime","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"winningBid","type":"uint256"}],"name":"AuctionEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"BidCreated","type":"event"},{"inputs":[],"name":"auctionEndTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"auctionEnded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"bidCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"bids","outputs":[{"internalType":"address","name":"bidder","type":"address"},{"internalType":"uint256","name":"bid","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkAuctionEndTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"checkBid","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endAuction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAuctionDetails","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"highestBid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"highestBidder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"seller","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"startingPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_593":{"entryPoint":null,"id":593,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address_payable_fromMemory":{"entryPoint":247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256t_uint256_fromMemory":{"entryPoint":329,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":468,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":201,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":169,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":270,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":421,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":164,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":221,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":280,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2310:2","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:2","statements":[{"nodeType":"YulAssignment","src":"57:19:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:2","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:2"},"nodeType":"YulFunctionCall","src":"67:9:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:2"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:2","type":""}],"src":"7:75:2"},{"body":{"nodeType":"YulBlock","src":"177:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:2"},"nodeType":"YulFunctionCall","src":"187:12:2"},"nodeType":"YulExpressionStatement","src":"187:12:2"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:2"},{"body":{"nodeType":"YulBlock","src":"300:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:2"},"nodeType":"YulFunctionCall","src":"310:12:2"},"nodeType":"YulExpressionStatement","src":"310:12:2"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:2"},{"body":{"nodeType":"YulBlock","src":"379:81:2","statements":[{"nodeType":"YulAssignment","src":"389:65:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:2"},"nodeType":"YulFunctionCall","src":"400:54:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:2"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:2","type":""}],"src":"334:126:2"},{"body":{"nodeType":"YulBlock","src":"519:51:2","statements":[{"nodeType":"YulAssignment","src":"529:35:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"558:5:2"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"540:17:2"},"nodeType":"YulFunctionCall","src":"540:24:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"529:7:2"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"501:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"511:7:2","type":""}],"src":"466:104:2"},{"body":{"nodeType":"YulBlock","src":"627:87:2","statements":[{"body":{"nodeType":"YulBlock","src":"692:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"701:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"704:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"694:6:2"},"nodeType":"YulFunctionCall","src":"694:12:2"},"nodeType":"YulExpressionStatement","src":"694:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"650:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"683:5:2"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"657:25:2"},"nodeType":"YulFunctionCall","src":"657:32:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"647:2:2"},"nodeType":"YulFunctionCall","src":"647:43:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"640:6:2"},"nodeType":"YulFunctionCall","src":"640:51:2"},"nodeType":"YulIf","src":"637:71:2"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"620:5:2","type":""}],"src":"576:138:2"},{"body":{"nodeType":"YulBlock","src":"791:88:2","statements":[{"nodeType":"YulAssignment","src":"801:22:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"816:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"810:5:2"},"nodeType":"YulFunctionCall","src":"810:13:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"801:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"867:5:2"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"832:34:2"},"nodeType":"YulFunctionCall","src":"832:41:2"},"nodeType":"YulExpressionStatement","src":"832:41:2"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"769:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"777:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"785:5:2","type":""}],"src":"720:159:2"},{"body":{"nodeType":"YulBlock","src":"930:32:2","statements":[{"nodeType":"YulAssignment","src":"940:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"951:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"940:7:2"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"912:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"922:7:2","type":""}],"src":"885:77:2"},{"body":{"nodeType":"YulBlock","src":"1011:79:2","statements":[{"body":{"nodeType":"YulBlock","src":"1068:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1077:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1080:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1070:6:2"},"nodeType":"YulFunctionCall","src":"1070:12:2"},"nodeType":"YulExpressionStatement","src":"1070:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1034:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1059:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1041:17:2"},"nodeType":"YulFunctionCall","src":"1041:24:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1031:2:2"},"nodeType":"YulFunctionCall","src":"1031:35:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1024:6:2"},"nodeType":"YulFunctionCall","src":"1024:43:2"},"nodeType":"YulIf","src":"1021:63:2"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1004:5:2","type":""}],"src":"968:122:2"},{"body":{"nodeType":"YulBlock","src":"1159:80:2","statements":[{"nodeType":"YulAssignment","src":"1169:22:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1184:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1178:5:2"},"nodeType":"YulFunctionCall","src":"1178:13:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1169:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1227:5:2"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1200:26:2"},"nodeType":"YulFunctionCall","src":"1200:33:2"},"nodeType":"YulExpressionStatement","src":"1200:33:2"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1137:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"1145:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1153:5:2","type":""}],"src":"1096:143:2"},{"body":{"nodeType":"YulBlock","src":"1364:560:2","statements":[{"body":{"nodeType":"YulBlock","src":"1410:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1412:77:2"},"nodeType":"YulFunctionCall","src":"1412:79:2"},"nodeType":"YulExpressionStatement","src":"1412:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1385:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"1394:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1381:3:2"},"nodeType":"YulFunctionCall","src":"1381:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"1406:2:2","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1377:3:2"},"nodeType":"YulFunctionCall","src":"1377:32:2"},"nodeType":"YulIf","src":"1374:119:2"},{"nodeType":"YulBlock","src":"1503:136:2","statements":[{"nodeType":"YulVariableDeclaration","src":"1518:15:2","value":{"kind":"number","nodeType":"YulLiteral","src":"1532:1:2","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1522:6:2","type":""}]},{"nodeType":"YulAssignment","src":"1547:82:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1601:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"1612:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1597:3:2"},"nodeType":"YulFunctionCall","src":"1597:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1621:7:2"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"1557:39:2"},"nodeType":"YulFunctionCall","src":"1557:72:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1547:6:2"}]}]},{"nodeType":"YulBlock","src":"1649:129:2","statements":[{"nodeType":"YulVariableDeclaration","src":"1664:16:2","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:2:2","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1668:6:2","type":""}]},{"nodeType":"YulAssignment","src":"1694:74:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1740:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"1751:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1736:3:2"},"nodeType":"YulFunctionCall","src":"1736:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1760:7:2"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1704:31:2"},"nodeType":"YulFunctionCall","src":"1704:64:2"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1694:6:2"}]}]},{"nodeType":"YulBlock","src":"1788:129:2","statements":[{"nodeType":"YulVariableDeclaration","src":"1803:16:2","value":{"kind":"number","nodeType":"YulLiteral","src":"1817:2:2","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1807:6:2","type":""}]},{"nodeType":"YulAssignment","src":"1833:74:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"1890:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:2"},"nodeType":"YulFunctionCall","src":"1875:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1899:7:2"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1843:31:2"},"nodeType":"YulFunctionCall","src":"1843:64:2"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1833:6:2"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1318:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1329:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1341:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1349:6:2","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1357:6:2","type":""}],"src":"1245:679:2"},{"body":{"nodeType":"YulBlock","src":"1958:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1975:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1978:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1968:6:2"},"nodeType":"YulFunctionCall","src":"1968:88:2"},"nodeType":"YulExpressionStatement","src":"1968:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2072:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2075:4:2","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2065:6:2"},"nodeType":"YulFunctionCall","src":"2065:15:2"},"nodeType":"YulExpressionStatement","src":"2065:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2096:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2099:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2089:6:2"},"nodeType":"YulFunctionCall","src":"2089:15:2"},"nodeType":"YulExpressionStatement","src":"2089:15:2"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1930:180:2"},{"body":{"nodeType":"YulBlock","src":"2160:147:2","statements":[{"nodeType":"YulAssignment","src":"2170:25:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2193:1:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2175:17:2"},"nodeType":"YulFunctionCall","src":"2175:20:2"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"2170:1:2"}]},{"nodeType":"YulAssignment","src":"2204:25:2","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2227:1:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2209:17:2"},"nodeType":"YulFunctionCall","src":"2209:20:2"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"2204:1:2"}]},{"nodeType":"YulAssignment","src":"2238:16:2","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2249:1:2"},{"name":"y","nodeType":"YulIdentifier","src":"2252:1:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2245:3:2"},"nodeType":"YulFunctionCall","src":"2245:9:2"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2238:3:2"}]},{"body":{"nodeType":"YulBlock","src":"2278:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2280:16:2"},"nodeType":"YulFunctionCall","src":"2280:18:2"},"nodeType":"YulExpressionStatement","src":"2280:18:2"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2270:1:2"},{"name":"sum","nodeType":"YulIdentifier","src":"2273:3:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2267:2:2"},"nodeType":"YulFunctionCall","src":"2267:10:2"},"nodeType":"YulIf","src":"2264:36:2"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2147:1:2","type":""},{"name":"y","nodeType":"YulTypedName","src":"2150:1:2","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2156:3:2","type":""}],"src":"2116:191:2"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":2,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200118238038062001182833981810160405281019062000037919062000149565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816001819055506001546002819055508042620000959190620001d4565b6004819055505050506200020f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000d682620000a9565b9050919050565b620000e881620000c9565b8114620000f457600080fd5b50565b6000815190506200010881620000dd565b92915050565b6000819050919050565b62000123816200010e565b81146200012f57600080fd5b50565b600081519050620001438162000118565b92915050565b600080600060608486031215620001655762000164620000a4565b5b60006200017586828701620000f7565b9350506020620001888682870162000132565b92505060406200019b8682870162000132565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620001e1826200010e565b9150620001ee836200010e565b9250828201905080821115620002095762000208620001a5565b5b92915050565b610f63806200021f6000396000f3fe6080604052600436106100c25760003560e01c8063864333741161007f578063d473f29e11610059578063d473f29e14610255578063d57bde7914610280578063d6fbf202146102ab578063fe67a54b146102d6576100c2565b806386433374146101d457806391f90157146101ff578063b40a56271461022a576100c2565b806308551a53146100c75780631998aeef146100f25780633a6dcea2146100fc5780634423c5f11461012d5780634b449cba1461016b57806358ed1aae14610196575b600080fd5b3480156100d357600080fd5b506100dc6102ed565b6040516100e99190610a57565b60405180910390f35b6100fa610311565b005b34801561010857600080fd5b506101116105a5565b6040516101249796959493929190610ac7565b60405180910390f35b34801561013957600080fd5b50610154600480360381019061014f9190610b67565b610628565b604051610162929190610b94565b60405180910390f35b34801561017757600080fd5b5061018061067c565b60405161018d9190610bbd565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190610b67565b610682565b6040516101cb929190610b94565b60405180910390f35b3480156101e057600080fd5b506101e9610899565b6040516101f69190610bd8565b60405180910390f35b34801561020b57600080fd5b506102146108ac565b6040516102219190610bf3565b60405180910390f35b34801561023657600080fd5b5061023f6108d2565b60405161024c9190610bbd565b60405180910390f35b34801561026157600080fd5b5061026a6108d8565b6040516102779190610bbd565b60405180910390f35b34801561028c57600080fd5b506102956108e2565b6040516102a29190610bbd565b60405180910390f35b3480156102b757600080fd5b506102c06108e8565b6040516102cd9190610bbd565b60405180910390f35b3480156102e257600080fd5b506102eb6108ee565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004544210610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c90610c6b565b60405180910390fd5b6002543411610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039090610cfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461045b57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f19350505050158015610459573d6000803e3d6000fd5b505b3460028190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001348152509050600781908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550506006600081548092919061056490610d4c565b91905055507fff2d32ce56b0b5d23a2d2e0fa74261ef152c762e716daa7e6eb1cc0fafa0a4e8333460405161059a929190610b94565b60405180910390a150565b60008060008060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600154600254600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600454600560009054906101000a900460ff16600654965096509650965096509650965090919293949596565b6007818154811061063857600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60045481565b6000806006548311156106ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c190610de0565b60405180910390fd5b6000600784815481106106e0576106df610e00565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050600454421161079f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079690610e7b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610846575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087c90610f0d565b60405180910390fd5b806000015181602001519250925050915091565b600560009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b6000600454905090565b60025481565b60015481565b600454421015610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90610e7b565b60405180910390fd5b6001600560006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f193505050501580156109b6573d6000803e3d6000fd5b507fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600254604051610a0c929190610b94565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4182610a16565b9050919050565b610a5181610a36565b82525050565b6000602082019050610a6c6000830184610a48565b92915050565b6000610a7d82610a16565b9050919050565b610a8d81610a72565b82525050565b6000819050919050565b610aa681610a93565b82525050565b60008115159050919050565b610ac181610aac565b82525050565b600060e082019050610adc600083018a610a84565b610ae96020830189610a9d565b610af66040830188610a9d565b610b036060830187610a84565b610b106080830186610a9d565b610b1d60a0830185610ab8565b610b2a60c0830184610a9d565b98975050505050505050565b600080fd5b610b4481610a93565b8114610b4f57600080fd5b50565b600081359050610b6181610b3b565b92915050565b600060208284031215610b7d57610b7c610b36565b5b6000610b8b84828501610b52565b91505092915050565b6000604082019050610ba96000830185610a84565b610bb66020830184610a9d565b9392505050565b6000602082019050610bd26000830184610a9d565b92915050565b6000602082019050610bed6000830184610ab8565b92915050565b6000602082019050610c086000830184610a84565b92915050565b600082825260208201905092915050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b6000610c55601183610c0e565b9150610c6082610c1f565b602082019050919050565b60006020820190508181036000830152610c8481610c48565b9050919050565b7f426964206d75737420626520686967686572207468616e20746865206375727260008201527f656e742068696768657374206269640000000000000000000000000000000000602082015250565b6000610ce7602f83610c0e565b9150610cf282610c8b565b604082019050919050565b60006020820190508181036000830152610d1681610cda565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5782610a93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d8957610d88610d1d565b5b600182019050919050565b7f57726f6e6720496e646578000000000000000000000000000000000000000000600082015250565b6000610dca600b83610c0e565b9150610dd582610d94565b602082019050919050565b60006020820190508181036000830152610df981610dbd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f41756374696f6e206973207374696c6c206f6e676f696e670000000000000000600082015250565b6000610e65601883610c0e565b9150610e7082610e2f565b602082019050919050565b60006020820190508181036000830152610e9481610e58565b9050919050565b7f4f6e6c7920486967686573742042696464657220616e642073656c6c6572206360008201527f616e20636865636b206269647300000000000000000000000000000000000000602082015250565b6000610ef7602d83610c0e565b9150610f0282610e9b565b604082019050919050565b60006020820190508181036000830152610f2681610eea565b905091905056fea2646970667358221220105482cb87cc5487388b77828b867a3e927de17e956b5ab935e5e1eba659f2be64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1182 CODESIZE SUB DUP1 PUSH3 0x1182 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x149 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 TIMESTAMP PUSH3 0x95 SWAP2 SWAP1 PUSH3 0x1D4 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD6 DUP3 PUSH3 0xA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE8 DUP2 PUSH3 0xC9 JUMP JUMPDEST DUP2 EQ PUSH3 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x108 DUP2 PUSH3 0xDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x123 DUP2 PUSH3 0x10E JUMP JUMPDEST DUP2 EQ PUSH3 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x143 DUP2 PUSH3 0x118 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x165 JUMPI PUSH3 0x164 PUSH3 0xA4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x175 DUP7 DUP3 DUP8 ADD PUSH3 0xF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x188 DUP7 DUP3 DUP8 ADD PUSH3 0x132 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x19B DUP7 DUP3 DUP8 ADD PUSH3 0x132 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1E1 DUP3 PUSH3 0x10E JUMP JUMPDEST SWAP2 POP PUSH3 0x1EE DUP4 PUSH3 0x10E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x209 JUMPI PUSH3 0x208 PUSH3 0x1A5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF63 DUP1 PUSH3 0x21F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86433374 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD473F29E GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD473F29E EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xD6FBF202 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xFE67A54B EQ PUSH2 0x2D6 JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x86433374 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xB40A5627 EQ PUSH2 0x22A JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x8551A53 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3A6DCEA2 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x4423C5F1 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x4B449CBA EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x58ED1AAE EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x311 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x8EE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD CALLVALUE GT PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x45B JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST CALLVALUE PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE POP SWAP1 POP PUSH1 0x7 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x564 SWAP1 PUSH2 0xD4C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xFF2D32CE56B0B5D23A2D2E0FA74261EF152C762E716DAA7E6EB1CC0FAFA0A4E8 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x59A SWAP3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 SLOAD SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD DUP4 GT ISZERO PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C1 SWAP1 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6E0 JUMPI PUSH2 0x6DF PUSH2 0xE00 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x796 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x846 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x885 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87C SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xDAEC4582D5D9595688C8C98545FDD1C696D41C6AEAEB636737E84ED2F5C00EDA PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0xA0C SWAP3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA41 DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA51 DUP2 PUSH2 0xA36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7D DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8D DUP2 PUSH2 0xA72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA6 DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC1 DUP2 PUSH2 0xAAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xADC PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xAE9 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xAF6 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xB03 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xB10 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xB1D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0xB2A PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xA9D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB44 DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP2 EQ PUSH2 0xB4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB61 DUP2 PUSH2 0xB3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7D JUMPI PUSH2 0xB7C PUSH2 0xB36 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8B DUP5 DUP3 DUP6 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBA9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xBB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA9D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC55 PUSH1 0x11 DUP4 PUSH2 0xC0E JUMP JUMPDEST SWAP2 POP PUSH2 0xC60 DUP3 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC84 DUP2 PUSH2 0xC48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E207468652063757272 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E742068696768657374206269640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE7 PUSH1 0x2F DUP4 PUSH2 0xC0E JUMP JUMPDEST SWAP2 POP PUSH2 0xCF2 DUP3 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD16 DUP2 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD57 DUP3 PUSH2 0xA93 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xD89 JUMPI PUSH2 0xD88 PUSH2 0xD1D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57726F6E6720496E646578000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCA PUSH1 0xB DUP4 PUSH2 0xC0E JUMP JUMPDEST SWAP2 POP PUSH2 0xDD5 DUP3 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF9 DUP2 PUSH2 0xDBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x41756374696F6E206973207374696C6C206F6E676F696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE65 PUSH1 0x18 DUP4 PUSH2 0xC0E JUMP JUMPDEST SWAP2 POP PUSH2 0xE70 DUP3 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE94 DUP2 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920486967686573742042696464657220616E642073656C6C65722063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E20636865636B206269647300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF7 PUSH1 0x2D DUP4 PUSH2 0xC0E JUMP JUMPDEST SWAP2 POP PUSH2 0xF02 DUP3 PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF26 DUP2 PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SLOAD DUP3 0xCB DUP8 0xCC SLOAD DUP8 CODESIZE DUP12 PUSH24 0x828B867A3E927DE17E956B5AB935E5E1EBA659F2BE64736F PUSH13 0x63430008130033000000000000 ","sourceMap":"130:3308:1:-:0;;;965:414;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1190:7;1181:6;;:16;;;;;;;;;;;;;;;;;;1224:14;1208:13;:30;;;;1262:13;;1249:10;:26;;;;1321:15;1303;:33;;;;:::i;:::-;1286:14;:50;;;;965:414;;;130:3308;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:77::-;922:7;951:5;940:16;;885:77;;;:::o;968:122::-;1041:24;1059:5;1041:24;:::i;:::-;1034:5;1031:35;1021:63;;1080:1;1077;1070:12;1021:63;968:122;:::o;1096:143::-;1153:5;1184:6;1178:13;1169:22;;1200:33;1227:5;1200:33;:::i;:::-;1096:143;;;;:::o;1245:679::-;1341:6;1349;1357;1406:2;1394:9;1385:7;1381:23;1377:32;1374:119;;;1412:79;;:::i;:::-;1374:119;1532:1;1557:72;1621:7;1612:6;1601:9;1597:22;1557:72;:::i;:::-;1547:82;;1503:136;1678:2;1704:64;1760:7;1751:6;1740:9;1736:22;1704:64;:::i;:::-;1694:74;;1649:129;1817:2;1843:64;1899:7;1890:6;1879:9;1875:22;1843:64;:::i;:::-;1833:74;;1788:129;1245:679;;;;;:::o;1930:180::-;1978:77;1975:1;1968:88;2075:4;2072:1;2065:15;2099:4;2096:1;2089:15;2116:191;2156:3;2175:20;2193:1;2175:20;:::i;:::-;2170:25;;2209:20;2227:1;2209:20;:::i;:::-;2204:25;;2252:1;2249;2245:9;2238:16;;2273:3;2270:1;2267:10;2264:36;;;2280:18;;:::i;:::-;2264:36;2116:191;;;;:::o;130:3308:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@auctionEndTime_539":{"entryPoint":1660,"id":539,"parameterSlots":0,"returnSlots":0},"@auctionEnded_541":{"entryPoint":2201,"id":541,"parameterSlots":0,"returnSlots":0},"@bidCount_543":{"entryPoint":2258,"id":543,"parameterSlots":0,"returnSlots":0},"@bid_665":{"entryPoint":785,"id":665,"parameterSlots":0,"returnSlots":0},"@bids_552":{"entryPoint":1576,"id":552,"parameterSlots":0,"returnSlots":0},"@checkAuctionEndTime_724":{"entryPoint":2264,"id":724,"parameterSlots":0,"returnSlots":1},"@checkBid_716":{"entryPoint":1666,"id":716,"parameterSlots":1,"returnSlots":2},"@endAuction_751":{"entryPoint":2286,"id":751,"parameterSlots":0,"returnSlots":0},"@getAuctionDetails_778":{"entryPoint":1445,"id":778,"parameterSlots":0,"returnSlots":7},"@highestBid_535":{"entryPoint":2274,"id":535,"parameterSlots":0,"returnSlots":0},"@highestBidder_537":{"entryPoint":2220,"id":537,"parameterSlots":0,"returnSlots":0},"@seller_531":{"entryPoint":749,"id":531,"parameterSlots":0,"returnSlots":0},"@startingPrice_533":{"entryPoint":2280,"id":533,"parameterSlots":0,"returnSlots":0},"abi_decode_t_uint256":{"entryPoint":2898,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":2632,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2692,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2744,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf_to_t_string_memory_ptr_fromStack":{"entryPoint":3818,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f_to_t_string_memory_ptr_fromStack":{"entryPoint":3672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack":{"entryPoint":3144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd_to_t_string_memory_ptr_fromStack":{"entryPoint":3517,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5_to_t_string_memory_ptr_fromStack":{"entryPoint":3290,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2717,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3059,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":2647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":2964,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256_t_bool_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":2759,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3032,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3853,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3707,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3552,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3005,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3086,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2674,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":2614,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2732,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2582,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2707,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":3404,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3357,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3584,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2870,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf":{"entryPoint":3739,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f":{"entryPoint":3631,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5":{"entryPoint":3103,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd":{"entryPoint":3476,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5":{"entryPoint":3211,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2875,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9892:2","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:2","statements":[{"nodeType":"YulAssignment","src":"62:65:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:2"},"nodeType":"YulFunctionCall","src":"73:54:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:2"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:2","type":""}],"src":"7:126:2"},{"body":{"nodeType":"YulBlock","src":"192:51:2","statements":[{"nodeType":"YulAssignment","src":"202:35:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"231:5:2"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"213:17:2"},"nodeType":"YulFunctionCall","src":"213:24:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"202:7:2"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"174:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"184:7:2","type":""}],"src":"139:104:2"},{"body":{"nodeType":"YulBlock","src":"330:61:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"347:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"378:5:2"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"352:25:2"},"nodeType":"YulFunctionCall","src":"352:32:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"340:6:2"},"nodeType":"YulFunctionCall","src":"340:45:2"},"nodeType":"YulExpressionStatement","src":"340:45:2"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"318:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"325:3:2","type":""}],"src":"249:142:2"},{"body":{"nodeType":"YulBlock","src":"511:140:2","statements":[{"nodeType":"YulAssignment","src":"521:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"533:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"544:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"529:3:2"},"nodeType":"YulFunctionCall","src":"529:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"521:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"617:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"630:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"641:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"626:3:2"},"nodeType":"YulFunctionCall","src":"626:17:2"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"557:59:2"},"nodeType":"YulFunctionCall","src":"557:87:2"},"nodeType":"YulExpressionStatement","src":"557:87:2"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"483:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"495:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"506:4:2","type":""}],"src":"397:254:2"},{"body":{"nodeType":"YulBlock","src":"702:51:2","statements":[{"nodeType":"YulAssignment","src":"712:35:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"741:5:2"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"723:17:2"},"nodeType":"YulFunctionCall","src":"723:24:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"712:7:2"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"684:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"694:7:2","type":""}],"src":"657:96:2"},{"body":{"nodeType":"YulBlock","src":"824:53:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"841:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"864:5:2"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"846:17:2"},"nodeType":"YulFunctionCall","src":"846:24:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"834:6:2"},"nodeType":"YulFunctionCall","src":"834:37:2"},"nodeType":"YulExpressionStatement","src":"834:37:2"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"812:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"819:3:2","type":""}],"src":"759:118:2"},{"body":{"nodeType":"YulBlock","src":"928:32:2","statements":[{"nodeType":"YulAssignment","src":"938:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"949:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"938:7:2"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"910:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"920:7:2","type":""}],"src":"883:77:2"},{"body":{"nodeType":"YulBlock","src":"1031:53:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1048:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1071:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1053:17:2"},"nodeType":"YulFunctionCall","src":"1053:24:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1041:6:2"},"nodeType":"YulFunctionCall","src":"1041:37:2"},"nodeType":"YulExpressionStatement","src":"1041:37:2"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1019:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1026:3:2","type":""}],"src":"966:118:2"},{"body":{"nodeType":"YulBlock","src":"1132:48:2","statements":[{"nodeType":"YulAssignment","src":"1142:32:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1160:6:2"},"nodeType":"YulFunctionCall","src":"1160:13:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1153:6:2"},"nodeType":"YulFunctionCall","src":"1153:21:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1142:7:2"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1114:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1124:7:2","type":""}],"src":"1090:90:2"},{"body":{"nodeType":"YulBlock","src":"1245:50:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1262:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1282:5:2"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1267:14:2"},"nodeType":"YulFunctionCall","src":"1267:21:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1255:6:2"},"nodeType":"YulFunctionCall","src":"1255:34:2"},"nodeType":"YulExpressionStatement","src":"1255:34:2"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1233:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1240:3:2","type":""}],"src":"1186:109:2"},{"body":{"nodeType":"YulBlock","src":"1561:614:2","statements":[{"nodeType":"YulAssignment","src":"1571:27:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1583:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1594:3:2","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1579:3:2"},"nodeType":"YulFunctionCall","src":"1579:19:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1571:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1652:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1665:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1676:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1661:3:2"},"nodeType":"YulFunctionCall","src":"1661:17:2"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1608:43:2"},"nodeType":"YulFunctionCall","src":"1608:71:2"},"nodeType":"YulExpressionStatement","src":"1608:71:2"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1733:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1746:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1757:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1742:3:2"},"nodeType":"YulFunctionCall","src":"1742:18:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1689:43:2"},"nodeType":"YulFunctionCall","src":"1689:72:2"},"nodeType":"YulExpressionStatement","src":"1689:72:2"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1815:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1828:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1839:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1824:3:2"},"nodeType":"YulFunctionCall","src":"1824:18:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1771:43:2"},"nodeType":"YulFunctionCall","src":"1771:72:2"},"nodeType":"YulExpressionStatement","src":"1771:72:2"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1897:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1910:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1921:2:2","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1906:3:2"},"nodeType":"YulFunctionCall","src":"1906:18:2"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1853:43:2"},"nodeType":"YulFunctionCall","src":"1853:72:2"},"nodeType":"YulExpressionStatement","src":"1853:72:2"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1979:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1992:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2003:3:2","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1988:3:2"},"nodeType":"YulFunctionCall","src":"1988:19:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1935:43:2"},"nodeType":"YulFunctionCall","src":"1935:73:2"},"nodeType":"YulExpressionStatement","src":"1935:73:2"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"2056:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2069:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2080:3:2","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2065:3:2"},"nodeType":"YulFunctionCall","src":"2065:19:2"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2018:37:2"},"nodeType":"YulFunctionCall","src":"2018:67:2"},"nodeType":"YulExpressionStatement","src":"2018:67:2"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"2139:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2163:3:2","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:2"},"nodeType":"YulFunctionCall","src":"2148:19:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2095:43:2"},"nodeType":"YulFunctionCall","src":"2095:73:2"},"nodeType":"YulExpressionStatement","src":"2095:73:2"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256_t_bool_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1485:9:2","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1497:6:2","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1505:6:2","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1513:6:2","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1521:6:2","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1529:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1537:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1545:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1556:4:2","type":""}],"src":"1301:874:2"},{"body":{"nodeType":"YulBlock","src":"2221:35:2","statements":[{"nodeType":"YulAssignment","src":"2231:19:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2247:2:2","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2241:5:2"},"nodeType":"YulFunctionCall","src":"2241:9:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2231:6:2"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2214:6:2","type":""}],"src":"2181:75:2"},{"body":{"nodeType":"YulBlock","src":"2351:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2368:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2371:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2361:6:2"},"nodeType":"YulFunctionCall","src":"2361:12:2"},"nodeType":"YulExpressionStatement","src":"2361:12:2"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2262:117:2"},{"body":{"nodeType":"YulBlock","src":"2474:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2491:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2494:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2484:6:2"},"nodeType":"YulFunctionCall","src":"2484:12:2"},"nodeType":"YulExpressionStatement","src":"2484:12:2"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2385:117:2"},{"body":{"nodeType":"YulBlock","src":"2551:79:2","statements":[{"body":{"nodeType":"YulBlock","src":"2608:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2617:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2620:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2610:6:2"},"nodeType":"YulFunctionCall","src":"2610:12:2"},"nodeType":"YulExpressionStatement","src":"2610:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2574:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2599:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2581:17:2"},"nodeType":"YulFunctionCall","src":"2581:24:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2571:2:2"},"nodeType":"YulFunctionCall","src":"2571:35:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2564:6:2"},"nodeType":"YulFunctionCall","src":"2564:43:2"},"nodeType":"YulIf","src":"2561:63:2"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2544:5:2","type":""}],"src":"2508:122:2"},{"body":{"nodeType":"YulBlock","src":"2688:87:2","statements":[{"nodeType":"YulAssignment","src":"2698:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2720:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2707:12:2"},"nodeType":"YulFunctionCall","src":"2707:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2698:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2763:5:2"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2736:26:2"},"nodeType":"YulFunctionCall","src":"2736:33:2"},"nodeType":"YulExpressionStatement","src":"2736:33:2"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2666:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"2674:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2682:5:2","type":""}],"src":"2636:139:2"},{"body":{"nodeType":"YulBlock","src":"2847:263:2","statements":[{"body":{"nodeType":"YulBlock","src":"2893:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2895:77:2"},"nodeType":"YulFunctionCall","src":"2895:79:2"},"nodeType":"YulExpressionStatement","src":"2895:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2868:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"2877:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2864:3:2"},"nodeType":"YulFunctionCall","src":"2864:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"2889:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2860:3:2"},"nodeType":"YulFunctionCall","src":"2860:32:2"},"nodeType":"YulIf","src":"2857:119:2"},{"nodeType":"YulBlock","src":"2986:117:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3001:15:2","value":{"kind":"number","nodeType":"YulLiteral","src":"3015:1:2","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3005:6:2","type":""}]},{"nodeType":"YulAssignment","src":"3030:63:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3065:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"3076:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3061:3:2"},"nodeType":"YulFunctionCall","src":"3061:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3085:7:2"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3040:20:2"},"nodeType":"YulFunctionCall","src":"3040:53:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3030:6:2"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2817:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2828:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2840:6:2","type":""}],"src":"2781:329:2"},{"body":{"nodeType":"YulBlock","src":"3242:206:2","statements":[{"nodeType":"YulAssignment","src":"3252:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3264:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3275:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3260:3:2"},"nodeType":"YulFunctionCall","src":"3260:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3252:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3332:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3345:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3356:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3341:3:2"},"nodeType":"YulFunctionCall","src":"3341:17:2"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3288:43:2"},"nodeType":"YulFunctionCall","src":"3288:71:2"},"nodeType":"YulExpressionStatement","src":"3288:71:2"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3413:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3426:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3437:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3422:3:2"},"nodeType":"YulFunctionCall","src":"3422:18:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3369:43:2"},"nodeType":"YulFunctionCall","src":"3369:72:2"},"nodeType":"YulExpressionStatement","src":"3369:72:2"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3206:9:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3218:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3226:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3237:4:2","type":""}],"src":"3116:332:2"},{"body":{"nodeType":"YulBlock","src":"3552:124:2","statements":[{"nodeType":"YulAssignment","src":"3562:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3574:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3585:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3570:3:2"},"nodeType":"YulFunctionCall","src":"3570:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3562:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3642:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3655:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3666:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3651:3:2"},"nodeType":"YulFunctionCall","src":"3651:17:2"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3598:43:2"},"nodeType":"YulFunctionCall","src":"3598:71:2"},"nodeType":"YulExpressionStatement","src":"3598:71:2"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3524:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3536:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3547:4:2","type":""}],"src":"3454:222:2"},{"body":{"nodeType":"YulBlock","src":"3774:118:2","statements":[{"nodeType":"YulAssignment","src":"3784:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3796:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3807:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3792:3:2"},"nodeType":"YulFunctionCall","src":"3792:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3784:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3858:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3871:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3882:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3867:3:2"},"nodeType":"YulFunctionCall","src":"3867:17:2"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3820:37:2"},"nodeType":"YulFunctionCall","src":"3820:65:2"},"nodeType":"YulExpressionStatement","src":"3820:65:2"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3746:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3758:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3769:4:2","type":""}],"src":"3682:210:2"},{"body":{"nodeType":"YulBlock","src":"3996:124:2","statements":[{"nodeType":"YulAssignment","src":"4006:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4018:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4029:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4014:3:2"},"nodeType":"YulFunctionCall","src":"4014:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4006:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4086:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4099:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4110:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4095:3:2"},"nodeType":"YulFunctionCall","src":"4095:17:2"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4042:43:2"},"nodeType":"YulFunctionCall","src":"4042:71:2"},"nodeType":"YulExpressionStatement","src":"4042:71:2"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3968:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3980:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3991:4:2","type":""}],"src":"3898:222:2"},{"body":{"nodeType":"YulBlock","src":"4222:73:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4239:3:2"},{"name":"length","nodeType":"YulIdentifier","src":"4244:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4232:6:2"},"nodeType":"YulFunctionCall","src":"4232:19:2"},"nodeType":"YulExpressionStatement","src":"4232:19:2"},{"nodeType":"YulAssignment","src":"4260:29:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4279:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"4284:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4275:3:2"},"nodeType":"YulFunctionCall","src":"4275:14:2"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4260:11:2"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4194:3:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"4199:6:2","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4210:11:2","type":""}],"src":"4126:169:2"},{"body":{"nodeType":"YulBlock","src":"4407:61:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4429:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"4437:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4425:3:2"},"nodeType":"YulFunctionCall","src":"4425:14:2"},{"hexValue":"41756374696f6e2068617320656e646564","kind":"string","nodeType":"YulLiteral","src":"4441:19:2","type":"","value":"Auction has ended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4418:6:2"},"nodeType":"YulFunctionCall","src":"4418:43:2"},"nodeType":"YulExpressionStatement","src":"4418:43:2"}]},"name":"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4399:6:2","type":""}],"src":"4301:167:2"},{"body":{"nodeType":"YulBlock","src":"4620:220:2","statements":[{"nodeType":"YulAssignment","src":"4630:74:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4696:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"4701:2:2","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4637:58:2"},"nodeType":"YulFunctionCall","src":"4637:67:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4630:3:2"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4802:3:2"}],"functionName":{"name":"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","nodeType":"YulIdentifier","src":"4713:88:2"},"nodeType":"YulFunctionCall","src":"4713:93:2"},"nodeType":"YulExpressionStatement","src":"4713:93:2"},{"nodeType":"YulAssignment","src":"4815:19:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4826:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"4831:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:2"},"nodeType":"YulFunctionCall","src":"4822:12:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4815:3:2"}]}]},"name":"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4608:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4616:3:2","type":""}],"src":"4474:366:2"},{"body":{"nodeType":"YulBlock","src":"5017:248:2","statements":[{"nodeType":"YulAssignment","src":"5027:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5039:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5050:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5035:3:2"},"nodeType":"YulFunctionCall","src":"5035:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5027:4:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5074:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"5085:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5070:3:2"},"nodeType":"YulFunctionCall","src":"5070:17:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5093:4:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"5099:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5089:3:2"},"nodeType":"YulFunctionCall","src":"5089:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5063:6:2"},"nodeType":"YulFunctionCall","src":"5063:47:2"},"nodeType":"YulExpressionStatement","src":"5063:47:2"},{"nodeType":"YulAssignment","src":"5119:139:2","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5253:4:2"}],"functionName":{"name":"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5127:124:2"},"nodeType":"YulFunctionCall","src":"5127:131:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5119:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4997:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5012:4:2","type":""}],"src":"4846:419:2"},{"body":{"nodeType":"YulBlock","src":"5377:128:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5399:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"5407:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:2"},"nodeType":"YulFunctionCall","src":"5395:14:2"},{"hexValue":"426964206d75737420626520686967686572207468616e207468652063757272","kind":"string","nodeType":"YulLiteral","src":"5411:34:2","type":"","value":"Bid must be higher than the curr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5388:6:2"},"nodeType":"YulFunctionCall","src":"5388:58:2"},"nodeType":"YulExpressionStatement","src":"5388:58:2"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5467:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"5475:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5463:3:2"},"nodeType":"YulFunctionCall","src":"5463:15:2"},{"hexValue":"656e74206869676865737420626964","kind":"string","nodeType":"YulLiteral","src":"5480:17:2","type":"","value":"ent highest bid"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5456:6:2"},"nodeType":"YulFunctionCall","src":"5456:42:2"},"nodeType":"YulExpressionStatement","src":"5456:42:2"}]},"name":"store_literal_in_memory_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5369:6:2","type":""}],"src":"5271:234:2"},{"body":{"nodeType":"YulBlock","src":"5657:220:2","statements":[{"nodeType":"YulAssignment","src":"5667:74:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5733:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"5738:2:2","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5674:58:2"},"nodeType":"YulFunctionCall","src":"5674:67:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5667:3:2"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5839:3:2"}],"functionName":{"name":"store_literal_in_memory_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5","nodeType":"YulIdentifier","src":"5750:88:2"},"nodeType":"YulFunctionCall","src":"5750:93:2"},"nodeType":"YulExpressionStatement","src":"5750:93:2"},{"nodeType":"YulAssignment","src":"5852:19:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5863:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"5868:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5859:3:2"},"nodeType":"YulFunctionCall","src":"5859:12:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5852:3:2"}]}]},"name":"abi_encode_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5645:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5653:3:2","type":""}],"src":"5511:366:2"},{"body":{"nodeType":"YulBlock","src":"6054:248:2","statements":[{"nodeType":"YulAssignment","src":"6064:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6076:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6087:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6072:3:2"},"nodeType":"YulFunctionCall","src":"6072:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6064:4:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6111:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6122:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6107:3:2"},"nodeType":"YulFunctionCall","src":"6107:17:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"6136:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6126:3:2"},"nodeType":"YulFunctionCall","src":"6126:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6100:6:2"},"nodeType":"YulFunctionCall","src":"6100:47:2"},"nodeType":"YulExpressionStatement","src":"6100:47:2"},{"nodeType":"YulAssignment","src":"6156:139:2","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6290:4:2"}],"functionName":{"name":"abi_encode_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6164:124:2"},"nodeType":"YulFunctionCall","src":"6164:131:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6156:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6034:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6049:4:2","type":""}],"src":"5883:419:2"},{"body":{"nodeType":"YulBlock","src":"6336:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6346:6:2"},"nodeType":"YulFunctionCall","src":"6346:88:2"},"nodeType":"YulExpressionStatement","src":"6346:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6450:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6453:4:2","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6443:6:2"},"nodeType":"YulFunctionCall","src":"6443:15:2"},"nodeType":"YulExpressionStatement","src":"6443:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6474:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6477:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6467:6:2"},"nodeType":"YulFunctionCall","src":"6467:15:2"},"nodeType":"YulExpressionStatement","src":"6467:15:2"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6308:180:2"},{"body":{"nodeType":"YulBlock","src":"6537:190:2","statements":[{"nodeType":"YulAssignment","src":"6547:33:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6574:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6556:17:2"},"nodeType":"YulFunctionCall","src":"6556:24:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6547:5:2"}]},{"body":{"nodeType":"YulBlock","src":"6670:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6672:16:2"},"nodeType":"YulFunctionCall","src":"6672:18:2"},"nodeType":"YulExpressionStatement","src":"6672:18:2"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6595:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"6602:66:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6592:2:2"},"nodeType":"YulFunctionCall","src":"6592:77:2"},"nodeType":"YulIf","src":"6589:103:2"},{"nodeType":"YulAssignment","src":"6701:20:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6712:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"6719:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6708:3:2"},"nodeType":"YulFunctionCall","src":"6708:13:2"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6701:3:2"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6523:5:2","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6533:3:2","type":""}],"src":"6494:233:2"},{"body":{"nodeType":"YulBlock","src":"6839:55:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6861:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"6869:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6857:3:2"},"nodeType":"YulFunctionCall","src":"6857:14:2"},{"hexValue":"57726f6e6720496e646578","kind":"string","nodeType":"YulLiteral","src":"6873:13:2","type":"","value":"Wrong Index"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6850:6:2"},"nodeType":"YulFunctionCall","src":"6850:37:2"},"nodeType":"YulExpressionStatement","src":"6850:37:2"}]},"name":"store_literal_in_memory_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6831:6:2","type":""}],"src":"6733:161:2"},{"body":{"nodeType":"YulBlock","src":"7046:220:2","statements":[{"nodeType":"YulAssignment","src":"7056:74:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7122:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7127:2:2","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7063:58:2"},"nodeType":"YulFunctionCall","src":"7063:67:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7056:3:2"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7228:3:2"}],"functionName":{"name":"store_literal_in_memory_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd","nodeType":"YulIdentifier","src":"7139:88:2"},"nodeType":"YulFunctionCall","src":"7139:93:2"},"nodeType":"YulExpressionStatement","src":"7139:93:2"},{"nodeType":"YulAssignment","src":"7241:19:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7252:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7257:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7248:3:2"},"nodeType":"YulFunctionCall","src":"7248:12:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7241:3:2"}]}]},"name":"abi_encode_t_stringliteral_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7034:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7042:3:2","type":""}],"src":"6900:366:2"},{"body":{"nodeType":"YulBlock","src":"7443:248:2","statements":[{"nodeType":"YulAssignment","src":"7453:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7465:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"7476:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7461:3:2"},"nodeType":"YulFunctionCall","src":"7461:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7453:4:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7500:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"7511:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7496:3:2"},"nodeType":"YulFunctionCall","src":"7496:17:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7519:4:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"7525:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7515:3:2"},"nodeType":"YulFunctionCall","src":"7515:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7489:6:2"},"nodeType":"YulFunctionCall","src":"7489:47:2"},"nodeType":"YulExpressionStatement","src":"7489:47:2"},{"nodeType":"YulAssignment","src":"7545:139:2","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7679:4:2"}],"functionName":{"name":"abi_encode_t_stringliteral_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7553:124:2"},"nodeType":"YulFunctionCall","src":"7553:131:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7545:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7423:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7438:4:2","type":""}],"src":"7272:419:2"},{"body":{"nodeType":"YulBlock","src":"7725:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7742:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7745:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7735:6:2"},"nodeType":"YulFunctionCall","src":"7735:88:2"},"nodeType":"YulExpressionStatement","src":"7735:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7839:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7842:4:2","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7832:6:2"},"nodeType":"YulFunctionCall","src":"7832:15:2"},"nodeType":"YulExpressionStatement","src":"7832:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7863:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7866:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7856:6:2"},"nodeType":"YulFunctionCall","src":"7856:15:2"},"nodeType":"YulExpressionStatement","src":"7856:15:2"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7697:180:2"},{"body":{"nodeType":"YulBlock","src":"7989:68:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8011:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"8019:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8007:3:2"},"nodeType":"YulFunctionCall","src":"8007:14:2"},{"hexValue":"41756374696f6e206973207374696c6c206f6e676f696e67","kind":"string","nodeType":"YulLiteral","src":"8023:26:2","type":"","value":"Auction is still ongoing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8000:6:2"},"nodeType":"YulFunctionCall","src":"8000:50:2"},"nodeType":"YulExpressionStatement","src":"8000:50:2"}]},"name":"store_literal_in_memory_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7981:6:2","type":""}],"src":"7883:174:2"},{"body":{"nodeType":"YulBlock","src":"8209:220:2","statements":[{"nodeType":"YulAssignment","src":"8219:74:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8285:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"8290:2:2","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8226:58:2"},"nodeType":"YulFunctionCall","src":"8226:67:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8219:3:2"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8391:3:2"}],"functionName":{"name":"store_literal_in_memory_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f","nodeType":"YulIdentifier","src":"8302:88:2"},"nodeType":"YulFunctionCall","src":"8302:93:2"},"nodeType":"YulExpressionStatement","src":"8302:93:2"},{"nodeType":"YulAssignment","src":"8404:19:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8415:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"8420:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8411:3:2"},"nodeType":"YulFunctionCall","src":"8411:12:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8404:3:2"}]}]},"name":"abi_encode_t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8197:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8205:3:2","type":""}],"src":"8063:366:2"},{"body":{"nodeType":"YulBlock","src":"8606:248:2","statements":[{"nodeType":"YulAssignment","src":"8616:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8628:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"8639:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8624:3:2"},"nodeType":"YulFunctionCall","src":"8624:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8616:4:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8663:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"8674:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8659:3:2"},"nodeType":"YulFunctionCall","src":"8659:17:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8682:4:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"8688:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8678:3:2"},"nodeType":"YulFunctionCall","src":"8678:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8652:6:2"},"nodeType":"YulFunctionCall","src":"8652:47:2"},"nodeType":"YulExpressionStatement","src":"8652:47:2"},{"nodeType":"YulAssignment","src":"8708:139:2","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8842:4:2"}],"functionName":{"name":"abi_encode_t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8716:124:2"},"nodeType":"YulFunctionCall","src":"8716:131:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8708:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8586:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8601:4:2","type":""}],"src":"8435:419:2"},{"body":{"nodeType":"YulBlock","src":"8966:126:2","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8988:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"8996:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8984:3:2"},"nodeType":"YulFunctionCall","src":"8984:14:2"},{"hexValue":"4f6e6c7920486967686573742042696464657220616e642073656c6c65722063","kind":"string","nodeType":"YulLiteral","src":"9000:34:2","type":"","value":"Only Highest Bidder and seller c"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8977:6:2"},"nodeType":"YulFunctionCall","src":"8977:58:2"},"nodeType":"YulExpressionStatement","src":"8977:58:2"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9056:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"9064:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9052:3:2"},"nodeType":"YulFunctionCall","src":"9052:15:2"},{"hexValue":"616e20636865636b2062696473","kind":"string","nodeType":"YulLiteral","src":"9069:15:2","type":"","value":"an check bids"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9045:6:2"},"nodeType":"YulFunctionCall","src":"9045:40:2"},"nodeType":"YulExpressionStatement","src":"9045:40:2"}]},"name":"store_literal_in_memory_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8958:6:2","type":""}],"src":"8860:232:2"},{"body":{"nodeType":"YulBlock","src":"9244:220:2","statements":[{"nodeType":"YulAssignment","src":"9254:74:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9320:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"9325:2:2","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9261:58:2"},"nodeType":"YulFunctionCall","src":"9261:67:2"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9254:3:2"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9426:3:2"}],"functionName":{"name":"store_literal_in_memory_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf","nodeType":"YulIdentifier","src":"9337:88:2"},"nodeType":"YulFunctionCall","src":"9337:93:2"},"nodeType":"YulExpressionStatement","src":"9337:93:2"},{"nodeType":"YulAssignment","src":"9439:19:2","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9450:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"9455:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9446:3:2"},"nodeType":"YulFunctionCall","src":"9446:12:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9439:3:2"}]}]},"name":"abi_encode_t_stringliteral_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9232:3:2","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9240:3:2","type":""}],"src":"9098:366:2"},{"body":{"nodeType":"YulBlock","src":"9641:248:2","statements":[{"nodeType":"YulAssignment","src":"9651:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9663:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"9674:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9659:3:2"},"nodeType":"YulFunctionCall","src":"9659:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9651:4:2"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9698:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"9709:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9694:3:2"},"nodeType":"YulFunctionCall","src":"9694:17:2"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9717:4:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"9723:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9713:3:2"},"nodeType":"YulFunctionCall","src":"9713:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9687:6:2"},"nodeType":"YulFunctionCall","src":"9687:47:2"},"nodeType":"YulExpressionStatement","src":"9687:47:2"},{"nodeType":"YulAssignment","src":"9743:139:2","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9877:4:2"}],"functionName":{"name":"abi_encode_t_stringliteral_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9751:124:2"},"nodeType":"YulFunctionCall","src":"9751:131:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9743:4:2"}]}]},"name":"abi_encode_tuple_t_stringliteral_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9621:9:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9636:4:2","type":""}],"src":"9470:419:2"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256_t_bool_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bid must be higher than the curr\")\n\n        mstore(add(memPtr, 32), \"ent highest bid\")\n\n    }\n\n    function abi_encode_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9628a1e508aa0875f9e1d69690dcb43707331f0081685e8af7111dbd59fecff5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wrong Index\")\n\n    }\n\n    function abi_encode_t_stringliteral_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_628a66945f54fdceaa6135adb581f9bf922dfcf58459a78de00485aff3b98bbd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction is still ongoing\")\n\n    }\n\n    function abi_encode_t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49c977c3eaab32599a5fc4d8444304f4c77fd0a48a5394e35afb39967f39421f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only Highest Bidder and seller c\")\n\n        mstore(add(memPtr, 32), \"an check bids\")\n\n    }\n\n    function abi_encode_t_stringliteral_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1644cbab1ed270a312ad23019a3122a8b7ef6698f2167423439b05df151dcdcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100c25760003560e01c8063864333741161007f578063d473f29e11610059578063d473f29e14610255578063d57bde7914610280578063d6fbf202146102ab578063fe67a54b146102d6576100c2565b806386433374146101d457806391f90157146101ff578063b40a56271461022a576100c2565b806308551a53146100c75780631998aeef146100f25780633a6dcea2146100fc5780634423c5f11461012d5780634b449cba1461016b57806358ed1aae14610196575b600080fd5b3480156100d357600080fd5b506100dc6102ed565b6040516100e99190610a57565b60405180910390f35b6100fa610311565b005b34801561010857600080fd5b506101116105a5565b6040516101249796959493929190610ac7565b60405180910390f35b34801561013957600080fd5b50610154600480360381019061014f9190610b67565b610628565b604051610162929190610b94565b60405180910390f35b34801561017757600080fd5b5061018061067c565b60405161018d9190610bbd565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190610b67565b610682565b6040516101cb929190610b94565b60405180910390f35b3480156101e057600080fd5b506101e9610899565b6040516101f69190610bd8565b60405180910390f35b34801561020b57600080fd5b506102146108ac565b6040516102219190610bf3565b60405180910390f35b34801561023657600080fd5b5061023f6108d2565b60405161024c9190610bbd565b60405180910390f35b34801561026157600080fd5b5061026a6108d8565b6040516102779190610bbd565b60405180910390f35b34801561028c57600080fd5b506102956108e2565b6040516102a29190610bbd565b60405180910390f35b3480156102b757600080fd5b506102c06108e8565b6040516102cd9190610bbd565b60405180910390f35b3480156102e257600080fd5b506102eb6108ee565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004544210610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c90610c6b565b60405180910390fd5b6002543411610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039090610cfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461045b57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f19350505050158015610459573d6000803e3d6000fd5b505b3460028190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001348152509050600781908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550506006600081548092919061056490610d4c565b91905055507fff2d32ce56b0b5d23a2d2e0fa74261ef152c762e716daa7e6eb1cc0fafa0a4e8333460405161059a929190610b94565b60405180910390a150565b60008060008060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600154600254600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600454600560009054906101000a900460ff16600654965096509650965096509650965090919293949596565b6007818154811061063857600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60045481565b6000806006548311156106ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c190610de0565b60405180910390fd5b6000600784815481106106e0576106df610e00565b5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050600454421161079f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079690610e7b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610846575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087c90610f0d565b60405180910390fd5b806000015181602001519250925050915091565b600560009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b6000600454905090565b60025481565b60015481565b600454421015610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90610e7b565b60405180910390fd5b6001600560006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f193505050501580156109b6573d6000803e3d6000fd5b507fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600254604051610a0c929190610b94565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4182610a16565b9050919050565b610a5181610a36565b82525050565b6000602082019050610a6c6000830184610a48565b92915050565b6000610a7d82610a16565b9050919050565b610a8d81610a72565b82525050565b6000819050919050565b610aa681610a93565b82525050565b60008115159050919050565b610ac181610aac565b82525050565b600060e082019050610adc600083018a610a84565b610ae96020830189610a9d565b610af66040830188610a9d565b610b036060830187610a84565b610b106080830186610a9d565b610b1d60a0830185610ab8565b610b2a60c0830184610a9d565b98975050505050505050565b600080fd5b610b4481610a93565b8114610b4f57600080fd5b50565b600081359050610b6181610b3b565b92915050565b600060208284031215610b7d57610b7c610b36565b5b6000610b8b84828501610b52565b91505092915050565b6000604082019050610ba96000830185610a84565b610bb66020830184610a9d565b9392505050565b6000602082019050610bd26000830184610a9d565b92915050565b6000602082019050610bed6000830184610ab8565b92915050565b6000602082019050610c086000830184610a84565b92915050565b600082825260208201905092915050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b6000610c55601183610c0e565b9150610c6082610c1f565b602082019050919050565b60006020820190508181036000830152610c8481610c48565b9050919050565b7f426964206d75737420626520686967686572207468616e20746865206375727260008201527f656e742068696768657374206269640000000000000000000000000000000000602082015250565b6000610ce7602f83610c0e565b9150610cf282610c8b565b604082019050919050565b60006020820190508181036000830152610d1681610cda565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5782610a93565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d8957610d88610d1d565b5b600182019050919050565b7f57726f6e6720496e646578000000000000000000000000000000000000000000600082015250565b6000610dca600b83610c0e565b9150610dd582610d94565b602082019050919050565b60006020820190508181036000830152610df981610dbd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f41756374696f6e206973207374696c6c206f6e676f696e670000000000000000600082015250565b6000610e65601883610c0e565b9150610e7082610e2f565b602082019050919050565b60006020820190508181036000830152610e9481610e58565b9050919050565b7f4f6e6c7920486967686573742042696464657220616e642073656c6c6572206360008201527f616e20636865636b206269647300000000000000000000000000000000000000602082015250565b6000610ef7602d83610c0e565b9150610f0282610e9b565b604082019050919050565b60006020820190508181036000830152610f2681610eea565b905091905056fea2646970667358221220105482cb87cc5487388b77828b867a3e927de17e956b5ab935e5e1eba659f2be64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86433374 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD473F29E GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD473F29E EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xD6FBF202 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xFE67A54B EQ PUSH2 0x2D6 JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x86433374 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xB40A5627 EQ PUSH2 0x22A JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x8551A53 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3A6DCEA2 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x4423C5F1 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x4B449CBA EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x58ED1AAE EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x311 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x8EE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD CALLVALUE GT PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x45B JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST CALLVALUE PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE POP SWAP1 POP PUSH1 0x7 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x564 SWAP1 PUSH2 0xD4C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xFF2D32CE56B0B5D23A2D2E0FA74261EF152C762E716DAA7E6EB1CC0FAFA0A4E8 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x59A SWAP3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 SLOAD SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD DUP4 GT ISZERO PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C1 SWAP1 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6E0 JUMPI PUSH2 0x6DF PUSH2 0xE00 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x4 SLOAD TIMESTAMP GT PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x796 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x846 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x885 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87C SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xDAEC4582D5D9595688C8C98545FDD1C696D41C6AEAEB636737E84ED2F5C00EDA PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0xA0C SWAP3 SWAP2 SWAP1 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA41 DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA51 DUP2 PUSH2 0xA36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7D DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8D DUP2 PUSH2 0xA72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA6 DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC1 DUP2 PUSH2 0xAAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xADC PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xAE9 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xAF6 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xB03 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xB10 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xB1D PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0xB2A PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xA9D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB44 DUP2 PUSH2 0xA93 JUMP JUMPDEST DUP2 EQ PUSH2 0xB4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB61 DUP2 PUSH2 0xB3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7D JUMPI PUSH2 0xB7C PUSH2 0xB36 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8B DUP5 DUP3 DUP6 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBA9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xBB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA9D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC55 PUSH1 0x11 DUP4 PUSH2 0xC0E JUMP JUMPDEST SWAP2 POP PUSH2 0xC60 DUP3 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC84 DUP2 PUSH2 0xC48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E207468652063757272 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E742068696768657374206269640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE7 PUSH1 0x2F DUP4 PUSH2 0xC0E JUMP JUMPDEST SWAP2 POP PUSH2 0xCF2 DUP3 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD16 DUP2 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD57 DUP3 PUSH2 0xA93 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xD89 JUMPI PUSH2 0xD88 PUSH2 0xD1D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57726F6E6720496E646578000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCA PUSH1 0xB DUP4 PUSH2 0xC0E JUMP JUMPDEST SWAP2 POP PUSH2 0xDD5 DUP3 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF9 DUP2 PUSH2 0xDBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x41756374696F6E206973207374696C6C206F6E676F696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE65 PUSH1 0x18 DUP4 PUSH2 0xC0E JUMP JUMPDEST SWAP2 POP PUSH2 0xE70 DUP3 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE94 DUP2 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920486967686573742042696464657220616E642073656C6C65722063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E20636865636B206269647300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF7 PUSH1 0x2D DUP4 PUSH2 0xC0E JUMP JUMPDEST SWAP2 POP PUSH2 0xF02 DUP3 PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF26 DUP2 PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SLOAD DUP3 0xCB DUP8 0xCC SLOAD DUP8 CODESIZE DUP12 PUSH24 0x828B867A3E927DE17E956B5AB935E5E1EBA659F2BE64736F PUSH13 0x63430008130033000000000000 ","sourceMap":"130:3308:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;181:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1387:581;;;:::i;:::-;;3073:362;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;731:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;432:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1976:458;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;503:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;364:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;579:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2442:103;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;310:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;242:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2622:398;;;;;;;;;;;;;:::i;:::-;;181:29;;;;;;;;;;;;:::o;1387:581::-;1456:14;;1438:15;:32;1430:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1537:10;;1525:9;:22;1503:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;1662:1;1637:27;;:13;;;;;;;;;;;:27;;;1633:103;;1689:13;;;;;;;;;;;1681:31;;:43;1713:10;;1681:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1633:103;1759:9;1746:10;:22;;;;1795:10;1779:13;;:26;;;;;;;;;;;;;;;;;;1816:17;1836:26;;;;;;;;1840:10;1836:26;;;;;;1852:9;1836:26;;;1816:46;;1873:4;1883:6;1873:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1901:8;;:10;;;;;;;;;:::i;:::-;;;;;;1927:33;1938:10;1950:9;1927:33;;;;;;;:::i;:::-;;;;;;;;1419:549;1387:581::o;3073:362::-;3152:7;3161;3170;3179;3188;3197:4;3203:7;3250:6;;;;;;;;;;;3271:13;;3299:10;;3324:13;;;;;;;;;;;3352:14;;3381:12;;;;;;;;;;;3408:8;;3228:199;;;;;;;;;;;;;;3073:362;;;;;;;:::o;731:17::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;432:29::-;;;;:::o;1976:458::-;2032:7;2041;2078:8;;2069:5;:17;;2061:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2113:17;2133:4;2138:5;2133:11;;;;;;;;:::i;:::-;;;;;;;;;;;;2113:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2181:14;;2163:15;:32;2155:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2271:13;;;;;;;;;;;2257:27;;:10;:27;;;:51;;;;2302:6;;;;;;;;;;2288:20;;:10;:20;;;2257:51;2235:146;;;;;;;;;;;;:::i;:::-;;;;;;;;;2400:6;:13;;;2415:6;:10;;;2392:34;;;;;1976:458;;;:::o;503:24::-;;;;;;;;;;;;;:::o;364:28::-;;;;;;;;;;;;;:::o;579:23::-;;;;:::o;2442:103::-;2496:7;2523:14;;2516:21;;2442:103;:::o;310:25::-;;;;:::o;242:28::-;;;;:::o;2622:398::-;2734:14;;2715:15;:33;;2707:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2803:4;2788:12;;:19;;;;;;;;;;;;;;;;;;2894:6;;;;;;;;;;:15;;:27;2910:10;;2894:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:39;2986:13;;;;;;;;;;;3001:10;;2973:39;;;;;;;:::i;:::-;;;;;;;;2622:398::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o;657:96::-;694:7;723:24;741:5;723:24;:::i;:::-;712:35;;657:96;;;:::o;759:118::-;846:24;864:5;846:24;:::i;:::-;841:3;834:37;759:118;;:::o;883:77::-;920:7;949:5;938:16;;883:77;;;:::o;966:118::-;1053:24;1071:5;1053:24;:::i;:::-;1048:3;1041:37;966:118;;:::o;1090:90::-;1124:7;1167:5;1160:13;1153:21;1142:32;;1090:90;;;:::o;1186:109::-;1267:21;1282:5;1267:21;:::i;:::-;1262:3;1255:34;1186:109;;:::o;1301:874::-;1556:4;1594:3;1583:9;1579:19;1571:27;;1608:71;1676:1;1665:9;1661:17;1652:6;1608:71;:::i;:::-;1689:72;1757:2;1746:9;1742:18;1733:6;1689:72;:::i;:::-;1771;1839:2;1828:9;1824:18;1815:6;1771:72;:::i;:::-;1853;1921:2;1910:9;1906:18;1897:6;1853:72;:::i;:::-;1935:73;2003:3;1992:9;1988:19;1979:6;1935:73;:::i;:::-;2018:67;2080:3;2069:9;2065:19;2056:6;2018:67;:::i;:::-;2095:73;2163:3;2152:9;2148:19;2139:6;2095:73;:::i;:::-;1301:874;;;;;;;;;;:::o;2262:117::-;2371:1;2368;2361:12;2508:122;2581:24;2599:5;2581:24;:::i;:::-;2574:5;2571:35;2561:63;;2620:1;2617;2610:12;2561:63;2508:122;:::o;2636:139::-;2682:5;2720:6;2707:20;2698:29;;2736:33;2763:5;2736:33;:::i;:::-;2636:139;;;;:::o;2781:329::-;2840:6;2889:2;2877:9;2868:7;2864:23;2860:32;2857:119;;;2895:79;;:::i;:::-;2857:119;3015:1;3040:53;3085:7;3076:6;3065:9;3061:22;3040:53;:::i;:::-;3030:63;;2986:117;2781:329;;;;:::o;3116:332::-;3237:4;3275:2;3264:9;3260:18;3252:26;;3288:71;3356:1;3345:9;3341:17;3332:6;3288:71;:::i;:::-;3369:72;3437:2;3426:9;3422:18;3413:6;3369:72;:::i;:::-;3116:332;;;;;:::o;3454:222::-;3547:4;3585:2;3574:9;3570:18;3562:26;;3598:71;3666:1;3655:9;3651:17;3642:6;3598:71;:::i;:::-;3454:222;;;;:::o;3682:210::-;3769:4;3807:2;3796:9;3792:18;3784:26;;3820:65;3882:1;3871:9;3867:17;3858:6;3820:65;:::i;:::-;3682:210;;;;:::o;3898:222::-;3991:4;4029:2;4018:9;4014:18;4006:26;;4042:71;4110:1;4099:9;4095:17;4086:6;4042:71;:::i;:::-;3898:222;;;;:::o;4126:169::-;4210:11;4244:6;4239:3;4232:19;4284:4;4279:3;4275:14;4260:29;;4126:169;;;;:::o;4301:167::-;4441:19;4437:1;4429:6;4425:14;4418:43;4301:167;:::o;4474:366::-;4616:3;4637:67;4701:2;4696:3;4637:67;:::i;:::-;4630:74;;4713:93;4802:3;4713:93;:::i;:::-;4831:2;4826:3;4822:12;4815:19;;4474:366;;;:::o;4846:419::-;5012:4;5050:2;5039:9;5035:18;5027:26;;5099:9;5093:4;5089:20;5085:1;5074:9;5070:17;5063:47;5127:131;5253:4;5127:131;:::i;:::-;5119:139;;4846:419;;;:::o;5271:234::-;5411:34;5407:1;5399:6;5395:14;5388:58;5480:17;5475:2;5467:6;5463:15;5456:42;5271:234;:::o;5511:366::-;5653:3;5674:67;5738:2;5733:3;5674:67;:::i;:::-;5667:74;;5750:93;5839:3;5750:93;:::i;:::-;5868:2;5863:3;5859:12;5852:19;;5511:366;;;:::o;5883:419::-;6049:4;6087:2;6076:9;6072:18;6064:26;;6136:9;6130:4;6126:20;6122:1;6111:9;6107:17;6100:47;6164:131;6290:4;6164:131;:::i;:::-;6156:139;;5883:419;;;:::o;6308:180::-;6356:77;6353:1;6346:88;6453:4;6450:1;6443:15;6477:4;6474:1;6467:15;6494:233;6533:3;6556:24;6574:5;6556:24;:::i;:::-;6547:33;;6602:66;6595:5;6592:77;6589:103;;6672:18;;:::i;:::-;6589:103;6719:1;6712:5;6708:13;6701:20;;6494:233;;;:::o;6733:161::-;6873:13;6869:1;6861:6;6857:14;6850:37;6733:161;:::o;6900:366::-;7042:3;7063:67;7127:2;7122:3;7063:67;:::i;:::-;7056:74;;7139:93;7228:3;7139:93;:::i;:::-;7257:2;7252:3;7248:12;7241:19;;6900:366;;;:::o;7272:419::-;7438:4;7476:2;7465:9;7461:18;7453:26;;7525:9;7519:4;7515:20;7511:1;7500:9;7496:17;7489:47;7553:131;7679:4;7553:131;:::i;:::-;7545:139;;7272:419;;;:::o;7697:180::-;7745:77;7742:1;7735:88;7842:4;7839:1;7832:15;7866:4;7863:1;7856:15;7883:174;8023:26;8019:1;8011:6;8007:14;8000:50;7883:174;:::o;8063:366::-;8205:3;8226:67;8290:2;8285:3;8226:67;:::i;:::-;8219:74;;8302:93;8391:3;8302:93;:::i;:::-;8420:2;8415:3;8411:12;8404:19;;8063:366;;;:::o;8435:419::-;8601:4;8639:2;8628:9;8624:18;8616:26;;8688:9;8682:4;8678:20;8674:1;8663:9;8659:17;8652:47;8716:131;8842:4;8716:131;:::i;:::-;8708:139;;8435:419;;;:::o;8860:232::-;9000:34;8996:1;8988:6;8984:14;8977:58;9069:15;9064:2;9056:6;9052:15;9045:40;8860:232;:::o;9098:366::-;9240:3;9261:67;9325:2;9320:3;9261:67;:::i;:::-;9254:74;;9337:93;9426:3;9337:93;:::i;:::-;9455:2;9450:3;9446:12;9439:19;;9098:366;;;:::o;9470:419::-;9636:4;9674:2;9663:9;9659:18;9651:26;;9723:9;9717:4;9713:20;9709:1;9698:9;9694:17;9687:47;9751:131;9877:4;9751:131;:::i;:::-;9743:139;;9470:419;;;:::o"},"methodIdentifiers":{"auctionEndTime()":"4b449cba","auctionEnded()":"86433374","bid()":"1998aeef","bidCount()":"b40a5627","bids(uint256)":"4423c5f1","checkAuctionEndTime()":"d473f29e","checkBid(uint256)":"58ed1aae","endAuction()":"fe67a54b","getAuctionDetails()":"3a6dcea2","highestBid()":"d57bde79","highestBidder()":"91f90157","seller()":"08551a53","startingPrice()":"d6fbf202"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningBid\",\"type\":\"uint256\"}],\"name\":\"AuctionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BidCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"auctionEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bidCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkAuctionEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"checkBid\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuctionDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"NewAuction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x81a0aa5766f7c48ea799114f44e902b2eb11f21808db23d56b6ca9edd48b8f59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94bd0c5263e98788d38bf7b6c24781dac3df4d5cb14045f70d14e208719c292\",\"dweb:/ipfs/QmZKEwnG9a9uPbgWCPVcbW7WGTy53Su6P1DTV95goPs4yU\"]},\"contracts/Auction.sol\":{\"keccak256\":\"0x89519adb72072d901d7efdb8e0c869db04a3801c562a2be36d83b4c3597c7404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698cfb020c6ca2c223344510f6ecb7cc2029311209286de85d89aef5e8804b4f\",\"dweb:/ipfs/QmP2amLFJySTbYBJz2Qp9cXUKHazwvCskSgR8WJTJVpyY7\"]}},\"version\":1}"}}}}}